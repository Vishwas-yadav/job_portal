[{"E:\\work\\job-portal-main\\job-portal-main\\frontend\\src\\index.js":"1","E:\\work\\job-portal-main\\job-portal-main\\frontend\\src\\App.js":"2","E:\\work\\job-portal-main\\job-portal-main\\frontend\\src\\reportWebVitals.js":"3","E:\\work\\job-portal-main\\job-portal-main\\frontend\\src\\component\\Logout.js":"4","E:\\work\\job-portal-main\\job-portal-main\\frontend\\src\\component\\Welcome.js":"5","E:\\work\\job-portal-main\\job-portal-main\\frontend\\src\\component\\Navbar.js":"6","E:\\work\\job-portal-main\\job-portal-main\\frontend\\src\\component\\Login.js":"7","E:\\work\\job-portal-main\\job-portal-main\\frontend\\src\\component\\Applications.js":"8","E:\\work\\job-portal-main\\job-portal-main\\frontend\\src\\component\\recruiter\\CreateJobs.js":"9","E:\\work\\job-portal-main\\job-portal-main\\frontend\\src\\component\\Signup.js":"10","E:\\work\\job-portal-main\\job-portal-main\\frontend\\src\\component\\Profile.js":"11","E:\\work\\job-portal-main\\job-portal-main\\frontend\\src\\component\\recruiter\\MyJobs.js":"12","E:\\work\\job-portal-main\\job-portal-main\\frontend\\src\\component\\recruiter\\JobApplications.js":"13","E:\\work\\job-portal-main\\job-portal-main\\frontend\\src\\component\\recruiter\\Profile.js":"14","E:\\work\\job-portal-main\\job-portal-main\\frontend\\src\\lib\\MessagePopup.js":"15","E:\\work\\job-portal-main\\job-portal-main\\frontend\\src\\component\\Home.js":"16","E:\\work\\job-portal-main\\job-portal-main\\frontend\\src\\lib\\isAuth.js":"17","E:\\work\\job-portal-main\\job-portal-main\\frontend\\src\\lib\\apiList.js":"18","E:\\work\\job-portal-main\\job-portal-main\\frontend\\src\\lib\\PasswordInput.js":"19","E:\\work\\job-portal-main\\job-portal-main\\frontend\\src\\lib\\EmailInput.js":"20","E:\\work\\job-portal-main\\job-portal-main\\frontend\\src\\lib\\FileUploadInput.js":"21","E:\\work\\job-portal-main\\job-portal-main\\frontend\\src\\component\\admin\\Employers.js":"22","E:\\work\\job-portal-main\\job-portal-main\\frontend\\src\\component\\admin\\Candidates.js":"23","E:\\mtech\\computing lab\\job_portal\\front_end\\src\\index.js":"24","E:\\mtech\\computing lab\\job_portal\\front_end\\src\\App.js":"25","E:\\mtech\\computing lab\\job_portal\\front_end\\src\\reportWebVitals.js":"26","E:\\mtech\\computing lab\\job_portal\\front_end\\src\\component\\Navbar.js":"27","E:\\mtech\\computing lab\\job_portal\\front_end\\src\\component\\Home.js":"28","E:\\mtech\\computing lab\\job_portal\\front_end\\src\\component\\Login.js":"29","E:\\mtech\\computing lab\\job_portal\\front_end\\src\\component\\Welcome.js":"30","E:\\mtech\\computing lab\\job_portal\\front_end\\src\\component\\Logout.js":"31","E:\\mtech\\computing lab\\job_portal\\front_end\\src\\component\\Profile.js":"32","E:\\mtech\\computing lab\\job_portal\\front_end\\src\\component\\Applications.js":"33","E:\\mtech\\computing lab\\job_portal\\front_end\\src\\component\\Signup.js":"34","E:\\mtech\\computing lab\\job_portal\\front_end\\src\\component\\recruiter\\CreateJobs.js":"35","E:\\mtech\\computing lab\\job_portal\\front_end\\src\\component\\admin\\Candidates.js":"36","E:\\mtech\\computing lab\\job_portal\\front_end\\src\\component\\admin\\Employers.js":"37","E:\\mtech\\computing lab\\job_portal\\front_end\\src\\lib\\MessagePopup.js":"38","E:\\mtech\\computing lab\\job_portal\\front_end\\src\\component\\recruiter\\JobApplications.js":"39","E:\\mtech\\computing lab\\job_portal\\front_end\\src\\component\\recruiter\\Profile.js":"40","E:\\mtech\\computing lab\\job_portal\\front_end\\src\\lib\\isAuth.js":"41","E:\\mtech\\computing lab\\job_portal\\front_end\\src\\component\\recruiter\\MyJobs.js":"42","E:\\mtech\\computing lab\\job_portal\\front_end\\src\\lib\\EmailInput.js":"43","E:\\mtech\\computing lab\\job_portal\\front_end\\src\\lib\\apiList.js":"44","E:\\mtech\\computing lab\\job_portal\\front_end\\src\\lib\\FileUploadInput.js":"45","E:\\mtech\\computing lab\\job_portal\\front_end\\src\\lib\\PasswordInput.js":"46"},{"size":500,"mtime":1612178250000,"results":"47","hashOfConfig":"48"},{"size":3795,"mtime":1669576169523,"results":"49","hashOfConfig":"48"},{"size":362,"mtime":1612178250000,"results":"50","hashOfConfig":"48"},{"size":562,"mtime":1669545118696,"results":"51","hashOfConfig":"48"},{"size":738,"mtime":1669576570529,"results":"52","hashOfConfig":"48"},{"size":2967,"mtime":1669574983295,"results":"53","hashOfConfig":"48"},{"size":3693,"mtime":1669575123805,"results":"54","hashOfConfig":"48"},{"size":6002,"mtime":1669576455409,"results":"55","hashOfConfig":"48"},{"size":6161,"mtime":1669576209255,"results":"56","hashOfConfig":"48"},{"size":15479,"mtime":1669576568775,"results":"57","hashOfConfig":"48"},{"size":13157,"mtime":1669576534562,"results":"58","hashOfConfig":"48"},{"size":19370,"mtime":1669576434308,"results":"59","hashOfConfig":"48"},{"size":10717,"mtime":1669576315035,"results":"60","hashOfConfig":"48"},{"size":5010,"mtime":1669551331924,"results":"61","hashOfConfig":"48"},{"size":503,"mtime":1612178250000,"results":"62","hashOfConfig":"48"},{"size":19313,"mtime":1669576493709,"results":"63","hashOfConfig":"48"},{"size":165,"mtime":1612178250000,"results":"64","hashOfConfig":"48"},{"size":911,"mtime":1669577521031,"results":"65","hashOfConfig":"48"},{"size":1666,"mtime":1612178250000,"results":"66","hashOfConfig":"48"},{"size":1167,"mtime":1612178250000,"results":"67","hashOfConfig":"48"},{"size":3279,"mtime":1612178250000,"results":"68","hashOfConfig":"48"},{"size":5178,"mtime":1669576061726,"results":"69","hashOfConfig":"48"},{"size":5077,"mtime":1669577806483,"results":"70","hashOfConfig":"48"},{"size":500,"mtime":1612178250000,"results":"71","hashOfConfig":"72"},{"size":3795,"mtime":1669576169523,"results":"73","hashOfConfig":"72"},{"size":362,"mtime":1612178250000,"results":"74","hashOfConfig":"72"},{"size":2967,"mtime":1669574983295,"results":"75","hashOfConfig":"72"},{"size":19313,"mtime":1669576493709,"results":"76","hashOfConfig":"72"},{"size":3693,"mtime":1669575123805,"results":"77","hashOfConfig":"72"},{"size":738,"mtime":1669576570529,"results":"78","hashOfConfig":"72"},{"size":562,"mtime":1669545118696,"results":"79","hashOfConfig":"72"},{"size":13157,"mtime":1669576534562,"results":"80","hashOfConfig":"72"},{"size":6002,"mtime":1669576455409,"results":"81","hashOfConfig":"72"},{"size":15479,"mtime":1669576568775,"results":"82","hashOfConfig":"72"},{"size":6161,"mtime":1669576209255,"results":"83","hashOfConfig":"72"},{"size":5077,"mtime":1669577806483,"results":"84","hashOfConfig":"72"},{"size":5178,"mtime":1669576061726,"results":"85","hashOfConfig":"72"},{"size":503,"mtime":1612178250000,"results":"86","hashOfConfig":"72"},{"size":10717,"mtime":1669576315035,"results":"87","hashOfConfig":"72"},{"size":5010,"mtime":1669551331924,"results":"88","hashOfConfig":"72"},{"size":165,"mtime":1612178250000,"results":"89","hashOfConfig":"72"},{"size":19370,"mtime":1669576434308,"results":"90","hashOfConfig":"72"},{"size":1167,"mtime":1612178250000,"results":"91","hashOfConfig":"72"},{"size":911,"mtime":1669577521031,"results":"92","hashOfConfig":"72"},{"size":3279,"mtime":1612178250000,"results":"93","hashOfConfig":"72"},{"size":1666,"mtime":1612178250000,"results":"94","hashOfConfig":"72"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},"hvl05k",{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"97"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"97"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"97"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"97"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"97"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"97"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"97"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"97"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"97"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"97"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"97"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"97"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"97"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"12kzrlj",{"filePath":"157","messages":"158","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"163","messages":"164","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"165","messages":"166","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"169","messages":"170","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"171","messages":"172","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"173","messages":"174","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"175","messages":"176","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"177","messages":"178","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"179","messages":"180","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"181","messages":"182","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"183","messages":"184","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"185","messages":"186","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"187","messages":"188","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"191","messages":"192","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\work\\job-portal-main\\job-portal-main\\frontend\\src\\index.js",[],["201","202"],"E:\\work\\job-portal-main\\job-portal-main\\frontend\\src\\App.js",["203"],"import { createContext, useState } from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport { Grid, makeStyles } from \"@material-ui/core\";\n\nimport Welcome, { ErrorPage } from \"./component/Welcome\";\nimport Navbar from \"./component/Navbar\";\nimport Login from \"./component/Login\";\nimport Logout from \"./component/Logout\";\nimport Signup from \"./component/Signup\";\nimport Home from \"./component/Home\";\nimport Employers from \"./component/admin/Employers\"\nimport Applications from \"./component/Applications\";\nimport Profile from \"./component/Profile\";\nimport CreateJobs from \"./component/recruiter/CreateJobs\";\nimport MyJobs from \"./component/recruiter/MyJobs\";\nimport JobApplications from \"./component/recruiter/JobApplications\";\nimport RecruiterProfile from \"./component/recruiter/Profile\";\nimport MessagePopup from \"./lib/MessagePopup\";\nimport isAuth, { userType } from \"./lib/isAuth\";\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core\";\nimport Candidates from \"./component/admin/Candidates\";\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#083D77\"\n    },\n    secondary: {\n      main: \"#095486\"\n    }\n  },\n  typography: {\n    fontFamily: \"Poppins\"\n  }\n});\n\nconst useStyles = makeStyles((theme) => ({\n  body: {\n    background: \"#f0f0f0\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    minHeight: \"98vh\",\n    paddingTop: \"64px\",\n    boxSizing: \"border-box\",\n    width: \"100%\",\n  },\n}));\n\nexport const SetPopupContext = createContext();\n\nfunction App() {\n  const classes = useStyles();\n  const [popup, setPopup] = useState({\n    open: false,\n    severity: \"\",\n    message: \"\",\n  });\n  return (\n    <ThemeProvider theme={theme}>\n      <BrowserRouter>\n      <SetPopupContext.Provider value={setPopup}>\n        <Grid container direction=\"column\">\n          <Grid item xs>\n            <Navbar/>\n          </Grid>\n          <Grid item className={classes.body}>\n            <Switch>\n              <Route exact path=\"/\">\n                <Welcome />\n              </Route>\n              <Route exact path=\"/login\">\n                <Login />\n              </Route>\n              <Route exact path=\"/signup\">\n                <Signup />\n              </Route>\n              <Route exact path=\"/logout\">\n                <Logout />\n              </Route>\n              <Route exact path=\"/home\">\n                <Home />\n              </Route>\n              <Route exact path=\"/applications\">\n                <Applications />\n              </Route>\n              <Route exact path=\"/employers\">\n                <Employers />\n              </Route>\n              <Route exact path=\"/candidates\">\n                <Candidates />\n              </Route>\n              <Route exact path=\"/profile\">\n                {userType() === \"recruiter\" ? (\n                  <RecruiterProfile />\n                ) : (\n                  <Profile />\n                )}\n              </Route>\n              <Route exact path=\"/addjob\">\n                <CreateJobs />\n              </Route>\n              <Route exact path=\"/myjobs\">\n                <MyJobs />\n              </Route>\n              <Route exact path=\"/job/applications/:jobId\">\n                <JobApplications />\n              </Route>\n              <Route>\n                <ErrorPage />\n              </Route>\n            </Switch>\n          </Grid>\n        </Grid>\n        <MessagePopup\n          open={popup.open}\n          setOpen={(status) =>\n            setPopup({\n              ...popup,\n              open: status,\n            })\n          }\n          severity={popup.severity}\n          message={popup.message}\n        />\n      </SetPopupContext.Provider>\n    </BrowserRouter>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","E:\\work\\job-portal-main\\job-portal-main\\frontend\\src\\reportWebVitals.js",[],"E:\\work\\job-portal-main\\job-portal-main\\frontend\\src\\component\\Logout.js",["204"],"import { useEffect, useContext } from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\nimport { SetPopupContext } from \"../App\";\n\nconst Logout = (props) => {\n  const setPopup = useContext(SetPopupContext);\n  useEffect(() => {\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"type\");\n    localStorage.removeItem(\"email\");\n    localStorage.removeItem(\"id\");\n    setPopup({\n      open: true,\n      severity: \"success\",\n      message: \"Logged out successfully\",\n    });\n  }, []);\n  return <Redirect to=\"/login\" />;\n};\n\nexport default Logout;\n","E:\\work\\job-portal-main\\job-portal-main\\frontend\\src\\component\\Welcome.js",[],"E:\\work\\job-portal-main\\job-portal-main\\frontend\\src\\component\\Navbar.js",[],"E:\\work\\job-portal-main\\job-portal-main\\frontend\\src\\component\\Login.js",["205"],"import { useContext, useState } from \"react\";\nimport {\n  Grid,\n  TextField,\n  Button,\n  Typography,\n  makeStyles,\n  Paper,\n} from \"@material-ui/core\";\nimport axios from \"axios\";\nimport { Redirect } from \"react-router-dom\";\n\nimport PasswordInput from \"../lib/PasswordInput\";\nimport EmailInput from \"../lib/EmailInput\";\nimport { SetPopupContext } from \"../App\";\n\nimport apiList from \"../lib/apiList\";\nimport isAuth from \"../lib/isAuth\";\n\nconst useStyles = makeStyles((theme) => ({\n  body: {\n    padding: \"60px 60px\",\n  },\n  inputBox: {\n    width: \"300px\",\n  },\n  submitButton: {\n    width: \"300px\",\n  },\n}));\n\nconst Login = (props) => {\n  const classes = useStyles();\n  const setPopup = useContext(SetPopupContext);\n\n  const [loggedin, setLoggedin] = useState(isAuth());\n\n  const [loginDetails, setLoginDetails] = useState({\n    email: \"\",\n    password: \"\",\n  });\n\n  const [inputErrorHandler, setInputErrorHandler] = useState({\n    email: {\n      error: false,\n      message: \"\",\n    },\n    password: {\n      error: false,\n      message: \"\",\n    },\n  });\n\n  const handleInput = (key, value) => {\n    setLoginDetails({\n      ...loginDetails,\n      [key]: value,\n    });\n  };\n\n  const handleInputError = (key, status, message) => {\n    setInputErrorHandler({\n      ...inputErrorHandler,\n      [key]: {\n        error: status,\n        message: message,\n      },\n    });\n  };\n\n  const handleLogin = () => {\n    const verified = !Object.keys(inputErrorHandler).some((obj) => {\n      return inputErrorHandler[obj].error;\n    });\n    if (verified) {\n      axios\n        .post(apiList.login, loginDetails)\n        .then((response) => {\n          localStorage.setItem(\"token\", response.data.res);\n          localStorage.setItem(\"email\", loginDetails.email);\n          localStorage.setItem(\"type\", response.data.role);\n          localStorage.setItem(\"id\", response.data.id);\n          setLoggedin(isAuth());\n          setPopup({\n            open: true,\n            severity: \"success\",\n            message: \"Logged in successfully\",\n          });\n          console.log(response);\n        })\n        .catch((err) => {\n          setPopup({\n            open: true,\n            severity: \"error\",\n            // message: \"Login Failed\",\n            message: err.response.data.err,\n          });\n          console.log(err.response);\n        });\n    } else {\n      setPopup({\n        open: true,\n        severity: \"error\",\n        message: \"Incorrect Input\",\n      });\n    }\n  };\n\n  return loggedin ? (\n    <Redirect to=\"/\" />\n  ) : (\n    <Paper elevation={3} className={classes.body}>\n      <Grid container direction=\"column\" spacing={4} alignItems=\"center\">\n        <Grid item>\n          <Typography variant=\"h3\" component=\"h2\">\n            Login\n          </Typography>\n        </Grid>\n        <Grid item>\n          <EmailInput\n            label=\"Email\"\n            value={loginDetails.email}\n            onChange={(event) => handleInput(\"email\", event.target.value)}\n            inputErrorHandler={inputErrorHandler}\n            handleInputError={handleInputError}\n            className={classes.inputBox}\n          />\n        </Grid>\n        <Grid item>\n          <PasswordInput\n            label=\"Password\"\n            value={loginDetails.password}\n            onChange={(event) => handleInput(\"password\", event.target.value)}\n            className={classes.inputBox}\n          />\n        </Grid>\n        <Grid item>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => handleLogin()}\n            className={classes.submitButton}\n          >\n            Login\n          </Button>\n        </Grid>\n      </Grid>\n    </Paper>\n  );\n};\n\nexport default Login;\n","E:\\work\\job-portal-main\\job-portal-main\\frontend\\src\\component\\Applications.js",["206","207","208","209","210","211","212","213","214","215","216","217","218","219","220","221"],"import { useState, useEffect, useContext } from \"react\";\nimport {\n  Button,\n  Chip,\n  Grid,\n  IconButton,\n  InputAdornment,\n  makeStyles,\n  Paper,\n  TextField,\n  Typography,\n  Modal,\n  Slider,\n  FormControlLabel,\n  FormGroup,\n  MenuItem,\n  Checkbox,\n} from \"@material-ui/core\";\nimport Rating from \"@material-ui/lab/Rating\";\nimport axios from \"axios\";\n\nimport { SetPopupContext } from \"../App\";\n\nimport apiList from \"../lib/apiList\";\n\nconst useStyles = makeStyles((theme) => ({\n  body: {\n    height: \"inherit\",\n  },\n  statusBlock: {\n    width: \"100%\",\n    height: \"100%\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    textTransform: \"uppercase\",\n  },\n  jobTileOuter: {\n    padding: \"30px\",\n    margin: \"20px 0\",\n    boxSizing: \"border-box\",\n    width: \"100%\",\n  },\n  popupDialog: {\n    height: \"100%\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n}));\n\nconst ApplicationTile = (props) => {\n  const classes = useStyles();\n  const { application } = props;\n  const setPopup = useContext(SetPopupContext);\n  useEffect(() => {\n    getOrgName();\n  }, []);\n  const [open, setOpen] = useState(false);\n  const [organizationName, setOrganizationName] = useState(\"\");\n\n  const getOrgName = () => {\n    axios\n      .get(apiList.employerDetails + application.empId, {\n        headers: {\n          authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n        },\n      })\n      .then((response) => {\n        console.log(response.data.res.organizationName);\n        setOrganizationName(response.data.res.organizationName)\n      })\n      .catch((err) => {\n        console.log(err);\n        setPopup({\n          open: true,\n          severity: \"error\",\n          message: \"Error\",\n        });\n      });\n  }\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const colorSet = {\n    Applied: \"#3454D1\",\n    Shortlisted: \"#DC851F\",\n    Accepted: \"#09BC8A\",\n    Rejected: \"#D1345B\",\n    Deleted: \"#B49A67\",\n    Cancelled: \"#FF8484\",\n    Finished: \"#4EA5D9\",\n    Testing: \"#3454D1\"\n  };\n\n  const getStatus = () => {\n    if (application.applicationStatus in colorSet) {\n      return (\n        <Paper\n          container\n          item\n          className={classes.statusBlock}\n          style={{\n            background: colorSet[application.applicationStatus],\n            color: \"#ffffff\",\n            padding: \"1em\",\n            textAlign: \"center\",\n            maxHeight: \"3em\",\n            maxWidth: \"7em\",\n            marginTop: \"1em\"\n          }}\n        >\n          {application.applicationStatus}\n        </Paper>\n      )\n    } else {\n      return (\n        <Paper\n          container\n          item\n          className={classes.statusBlock}\n          style={{\n            background: colorSet[\"Applied\"],\n            color: \"#ffffff\",\n            padding: \"1em\",\n            textAlign: \"center\",\n            maxHeight: \"3em\",\n            maxWidth: \"7em\",\n            marginTop: \"1em\"\n          }}\n        >\n          {application.applicationStatus}\n        </Paper>\n\n      )\n    }\n  }\n\n  return (\n    <Paper className={classes.jobTileOuter} elevation={3}>\n      <Grid container>\n        <Grid container item xs={9} spacing={1} direction=\"column\">\n          <Grid item>\n            <Typography variant=\"h5\">{application.jobtitle}</Typography>\n          </Grid>\n          <Grid item>Salary : &#8377; {application.salary} per month</Grid>\n          <Grid item>Description : {application.description}</Grid>\n          <Grid item>Qualification : {application.qualification}</Grid>\n          <Grid item>Location : {application.joblocation}</Grid>\n          <Grid item>Job Sector : {application.jobsector}</Grid>\n          <Grid item>Posted by : {organizationName}</Grid>\n        </Grid>\n        {getStatus()}\n      </Grid>\n    </Paper>\n  );\n};\n\nconst Applications = (props) => {\n  const setPopup = useContext(SetPopupContext);\n  const [applications, setApplications] = useState([]);\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  const getData = () => {\n\n    axios\n      .get(apiList.candidateDetails, {\n        headers: {\n          authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n        },\n      })\n      .then((response) => {\n        console.log(response.data.res);\n        let email = localStorage.getItem(\"email\");\n        let profile = response.data.res\n          .filter(x => x.email === email);\n        console.log(profile[0]._id);\n        let candId = profile[0]._id;\n        axios\n          .get(apiList.jobsApplied + candId, {\n            headers: {\n              authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n            },\n          })\n          .then((response) => {\n            console.log(response.data.res);\n            setApplications(response.data.res);\n          })\n          .catch((err) => {\n            // console.log(err.response);\n            console.log(err.response.data);\n            setPopup({\n              open: true,\n              severity: \"error\",\n              message: \"Error\",\n            });\n          });\n\n      })\n      .catch((err) => {\n        console.log(err.res);\n        setPopup({\n          open: true,\n          severity: \"error\",\n          message: \"Error\",\n        });\n      });\n  };\n\n  return (\n    <Grid\n      container\n      item\n      direction=\"column\"\n      alignItems=\"center\"\n      style={{ padding: \"30px\", minHeight: \"93vh\" }}\n    >\n      <Grid item>\n        <Typography variant=\"h2\">Applications</Typography>\n      </Grid>\n      <Grid\n        container\n        item\n        xs\n        direction=\"column\"\n        style={{ width: \"100%\" }}\n        alignItems=\"stretch\"\n        justify=\"center\"\n      >\n        {applications.length > 0 ? (\n          applications.map((obj) => (\n              <ApplicationTile application={obj} />\n          ))\n        ) : (\n          <Typography variant=\"h5\" style={{ textAlign: \"center\" }}>\n            No Applications Found\n          </Typography>\n        )}\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Applications;\n","E:\\work\\job-portal-main\\job-portal-main\\frontend\\src\\component\\recruiter\\CreateJobs.js",["222","223","224","225","226","227","228"],"import { useContext, useEffect, useState } from \"react\";\nimport {\n  Button,\n  Grid,\n  Typography,\n  Modal,\n  Paper,\n  makeStyles,\n  TextField,\n  MenuItem,\n} from \"@material-ui/core\";\nimport axios from \"axios\";\nimport ChipInput from \"material-ui-chip-input\";\n\nimport { SetPopupContext } from \"../../App\";\n\nimport apiList from \"../../lib/apiList\";\n\nconst useStyles = makeStyles((theme) => ({\n  body: {\n    height: \"inherit\",\n  },\n  popupDialog: {\n    height: \"100%\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    // padding: \"30px\",\n  },\n}));\n\nconst CreateJobs = (props) => {\n  const classes = useStyles();\n  const setPopup = useContext(SetPopupContext);\n  useEffect(() => {\n    getData();\n  }, []);\n  const [empId, setEmpId] = useState(\"\")\n  const [jobDetails, setJobDetails] = useState({\n    jobtitle: \"\",\n    description: \"\",\n    qualification: \"\",\n    salary: 0,\n    joblocation: \"\",\n    jobsector: \"\",\n    empId: \"\",\n  });\n\n\n  const getData = () => {\n    axios\n      .get(apiList.employerDetails, {\n        headers: {\n          authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n        },\n      })\n      .then((response) => {\n        console.log(response.data.res);\n        let email = localStorage.getItem(\"email\");\n        let profile = response.data.res\n          .filter(x => x.email === email);\n        setJobDetails({\n            ...jobDetails,\n            \"empId\": profile[0]._id,\n          });\n        console.log(jobDetails)\n      })\n      .catch((err) => {\n        console.log(err.res);\n        setPopup({\n          open: true,\n          severity: \"error\",\n          message: \"Error\",\n        });\n      });\n\n  };\n\n  const handleInput = (key, value) => {\n    setJobDetails({\n      ...jobDetails,\n      [key]: value,\n    });\n  };\n\n  const handleUpdate = () => {\n    console.log(jobDetails);\n    axios\n      .post(apiList.createJob, jobDetails, {\n        headers: {\n          authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n        },\n      })\n      .then((response) => {\n        setPopup({\n          open: true,\n          severity: \"success\",\n          message: response.data.message,\n        });\n        setJobDetails({\n          jobtitle: \"\",\n          description: \"\",\n          qualification: \"\",\n          salary: 0,\n          joblocation: \"\",\n          jobsector: \"\"\n        });\n      })\n      .catch((err) => {\n        setPopup({\n          open: true,\n          severity: \"error\",\n          message: err.response.data.message,\n        });\n        console.log(err.response);\n      });\n  };\n\n  return (\n    <>\n      <Grid\n        container\n        item\n        direction=\"column\"\n        alignItems=\"center\"\n        style={{ padding: \"30px\", minHeight: \"93vh\", width: \"\" }}\n      >\n        <Grid item>\n          <Typography variant=\"h2\">Add Job</Typography>\n        </Grid>\n        <Grid item container xs direction=\"column\" justify=\"center\">\n          <Grid item>\n            <Paper\n              style={{\n                padding: \"20px\",\n                outline: \"none\",\n                display: \"flex\",\n                flexDirection: \"column\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n              }}\n            >\n              <Grid\n                container\n                direction=\"column\"\n                alignItems=\"stretch\"\n                spacing={3}\n              >\n                <Grid item>\n                  <TextField\n                    label=\"Title\"\n                    value={jobDetails.jobtitle}\n                    onChange={(event) =>\n                      handleInput(\"jobtitle\", event.target.value)\n                    }\n                    variant=\"outlined\"\n                    fullWidth\n                  />\n                </Grid>\n                <Grid item>\n                  <TextField\n                    label=\"Description\"\n                    value={jobDetails.description}\n                    onChange={(event) =>\n                      handleInput(\"description\", event.target.value)\n                    }\n                    variant=\"outlined\"\n                    fullWidth\n                  />\n                </Grid>\n                <Grid item>\n                  <TextField\n                    label=\"Qualification\"\n                    value={jobDetails.qualification}\n                    onChange={(event) =>\n                      handleInput(\"qualification\", event.target.value)\n                    }\n                    variant=\"outlined\"\n                    fullWidth\n                  />\n                </Grid>\n                <Grid item>\n                  <TextField\n                    label=\"Salary\"\n                    type=\"number\"\n                    value={jobDetails.salary}\n                    onChange={(event) =>\n                      handleInput(\"salary\", event.target.value)\n                    }\n                    variant=\"outlined\"\n                    fullWidth\n                  />\n                </Grid>\n                <Grid item>\n                  <TextField\n                    label=\"Location\"\n                    value={jobDetails.joblocation}\n                    onChange={(event) =>\n                      handleInput(\"joblocation\", event.target.value)\n                    }\n                    variant=\"outlined\"\n                    fullWidth\n                  />\n                </Grid>\n                <Grid item>\n                  <TextField\n                    label=\"Sector\"\n                    value={jobDetails.jobsector}\n                    onChange={(event) =>\n                      handleInput(\"jobsector\", event.target.value)\n                    }\n                    variant=\"outlined\"\n                    fullWidth\n                  />\n                </Grid>\n              </Grid>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                style={{ padding: \"10px 50px\", marginTop: \"30px\" }}\n                onClick={() => handleUpdate()}\n              >\n                Create Job\n              </Button>\n            </Paper>\n          </Grid>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport default CreateJobs;\n","E:\\work\\job-portal-main\\job-portal-main\\frontend\\src\\component\\Signup.js",["229","230","231","232","233","234","235","236","237"],"import { useState, useContext } from \"react\";\nimport {\n  Grid,\n  TextField,\n  Button,\n  Typography,\n  makeStyles,\n  Paper,\n  MenuItem,\n  Input,\n} from \"@material-ui/core\";\nimport axios from \"axios\";\nimport { Redirect } from \"react-router-dom\";\nimport ChipInput from \"material-ui-chip-input\";\nimport DescriptionIcon from \"@material-ui/icons/Description\";\nimport FaceIcon from \"@material-ui/icons/Face\";\nimport PhoneInput from \"react-phone-input-2\";\nimport \"react-phone-input-2/lib/material.css\";\nimport DatePicker from 'react-date-picker';\nimport PasswordInput from \"../lib/PasswordInput\";\nimport EmailInput from \"../lib/EmailInput\";\nimport FileUploadInput from \"../lib/FileUploadInput\";\nimport { SetPopupContext } from \"../App\";\n\nimport apiList from \"../lib/apiList\";\nimport isAuth from \"../lib/isAuth\";\n\nconst useStyles = makeStyles((theme) => ({\n  body: {\n    padding: \"60px 60px\",\n  },\n  inputBox: {\n    width: \"400px\",\n  },\n  submitButton: {\n    width: \"400px\",\n  },\n}));\n\nconst MultifieldInputWorkExperience = (props) => {\n  const classes = useStyles();\n  const { workExperience, setWorkExperience } = props;\n  const { newExp, setNewExp } = useState('');\n  return (\n    <>\n      {workExperience.map((obj, key) => (\n        <Grid\n          container\n          className={classes.inputBox}\n          key={key}\n          style={{ paddingLeft: 0, paddingRight: 0 }}\n        >\n          <Grid item>\n            <TextField\n              style={{ marginBottom: 3 }}\n              label={`Work Experience #${key + 1}`}\n              className={classes.inputBox}\n              value={workExperience[key]}\n              onChange={(event) => {\n                const newWork = [...workExperience];\n                newWork[key] = event.target.value;\n                setWorkExperience(newWork);\n              }}\n              variant=\"outlined\"\n            />\n          </Grid>\n        </Grid>\n      ))}\n      <Grid item>\n        <Button\n          variant=\"contained\"\n          color=\"secondary\"\n          onClick={() =>\n            setWorkExperience([\n              ...workExperience,\n              \"\",\n            ])\n          }\n          className={classes.inputBox}\n        >\n          Add work experience\n        </Button>\n      </Grid>\n    </>\n  );\n};\n\nconst Login = (props) => {\n  const classes = useStyles();\n  const setPopup = useContext(SetPopupContext);\n\n  const [loggedin, setLoggedin] = useState(isAuth());\n\n  const [signupDetails, setSignupDetails] = useState({\n    email: \"\",\n    password: \"\",\n    name: \"\",\n    role: 'candidate',\n    dob: '',\n    address: '',\n    contact: '',\n    fathersName: '',\n    education: [\n      \"intermediate:\",\n      \"Highschool:\",\n      \"Btech:\"\n    ],\n    workExperience: [],\n    skills: [],\n    picture: 'a',\n    resume: 'a',\n    organizationName: \"\",\n    website: ''\n  });\n\n  const [contact, setContact] = useState(\"\");\n  const [dob, setDob] = useState(\"\");\n  const [organizationName, setOrganizationName] = useState(\"\");\n\n  const [education, setEducation] = useState([]);\n\n  const [workExperience, setWorkExperience] = useState([]);\n\n  const [inputErrorHandler, setInputErrorHandler] = useState({\n    email: {\n      untouched: true,\n      required: true,\n      error: false,\n      message: \"\",\n    },\n    password: {\n      untouched: true,\n      required: true,\n      error: false,\n      message: \"\",\n    },\n    name: {\n      untouched: true,\n      required: true,\n      error: false,\n      message: \"\",\n    },\n    address: {\n      untouched: true,\n      required: true,\n      error: false,\n      message: \"\",\n    }\n  });\n\n  const handleInput = (key, value) => {\n    setSignupDetails({\n      ...signupDetails,\n      [key]: value,\n    });\n  };\n\n  const handleEducationInput = (key, value) => {\n    let newDetails = signupDetails;\n    newDetails.education.concat(key + \":\" + value)\n    console.log(newDetails)\n    setSignupDetails({\n      ...newDetails\n    });\n  };\n\n  const handleInputError = (key, status, message) => {\n    setInputErrorHandler({\n      ...inputErrorHandler,\n      [key]: {\n        required: true,\n        untouched: false,\n        error: status,\n        message: message,\n      },\n    });\n  };\n\n  const handleLogin = () => {\n\n    const tmpErrorHandler = {};\n    Object.keys(inputErrorHandler).forEach((obj) => {\n      if (inputErrorHandler[obj].required && inputErrorHandler[obj].untouched) {\n        tmpErrorHandler[obj] = {\n          required: true,\n          untouched: false,\n          error: true,\n          message: `${obj[0].toUpperCase() + obj.substr(1)} is required`,\n        };\n      } else {\n        tmpErrorHandler[obj] = inputErrorHandler[obj];\n      }\n    });\n\n\n    let updatedDetails = {\n      ...signupDetails,\n      workExperience: workExperience,\n      dob: dob\n    };\n\n    if (contact !== \"\") {\n      updatedDetails = {\n        ...updatedDetails,\n        contact: `+${contact}`,\n      };\n    } else {\n      updatedDetails = {\n        ...updatedDetails,\n        contact: \"\",\n      };\n    }\n\n    console.log(updatedDetails);\n\n    setSignupDetails(updatedDetails);\n\n    const verified = !Object.keys(tmpErrorHandler).some((obj) => {\n      return tmpErrorHandler[obj].error;\n    });\n\n    if (verified) {\n      axios\n        .post(apiList.signup, updatedDetails)\n        .then((response) => {\n          localStorage.setItem(\"token\", response.data.res);\n          localStorage.setItem(\"email\", updatedDetails.email);\n          localStorage.setItem(\"type\", updatedDetails.role);\n          localStorage.setItem(\"id\", response.data.userId);\n          setLoggedin(isAuth());\n          setPopup({\n            open: true,\n            severity: \"success\",\n            message: \"Registered successfully\",\n          });\n          console.log(response);\n        })\n        .catch((err) => {\n          setPopup({\n            open: true,\n            severity: \"error\",\n            message: err.response.err,\n          });\n          console.log(err.response);\n        });\n    } else {\n      setInputErrorHandler(tmpErrorHandler);\n      setPopup({\n        open: true,\n        severity: \"error\",\n        message: \"Incorrect Input\",\n      });\n    }\n  };\n\n  const handleLoginEmployer = () => {\n    const tmpErrorHandler = {};\n    Object.keys(inputErrorHandler).forEach((obj) => {\n      if (inputErrorHandler[obj].required && inputErrorHandler[obj].untouched) {\n        tmpErrorHandler[obj] = {\n          required: true,\n          untouched: false,\n          error: true,\n          message: `${obj[0].toUpperCase() + obj.substr(1)} is required`,\n        };\n      } else {\n        tmpErrorHandler[obj] = inputErrorHandler[obj];\n      }\n    });\n\n    let updatedDetails = {\n      ...signupDetails,\n    };\n    if (contact !== \"\") {\n      updatedDetails = {\n        ...signupDetails,\n        contact: `+${contact}`,\n      };\n    } else {\n      updatedDetails = {\n        ...signupDetails,\n        contact: \"\",\n      };\n    }\n\n    setSignupDetails(updatedDetails);\n\n    const verified = !Object.keys(tmpErrorHandler).some((obj) => {\n      return tmpErrorHandler[obj].error;\n    });\n\n    console.log(updatedDetails);\n\n    if (verified) {\n      axios\n        .post(apiList.signup, updatedDetails)\n        .then((response) => {\n          // localStorage.setItem(\"token\", response.data.res);\n          // localStorage.setItem(\"email\", updatedDetails.email);\n          // localStorage.setItem(\"type\", updatedDetails.role);\n          // localStorage.setItem(\"id\", response.data.userId);\n          setLoggedin(true);\n          setPopup({\n            open: true,\n            severity: \"success\",\n            message: \"Registered successfully\",\n          });\n          console.log(response);\n        })\n        .catch((err) => {\n          setPopup({\n            open: true,\n            severity: \"error\",\n            message: err.response.data.message,\n          });\n          console.log(err.response);\n        });\n    } else {\n      setInputErrorHandler(tmpErrorHandler);\n      setPopup({\n        open: true,\n        severity: \"error\",\n        message: \"Incorrect Input\",\n      });\n    }\n  };\n\n  return loggedin ? (\n    <Redirect to=\"/\" />\n  ) : (\n    <Paper elevation={3} className={classes.body}>\n      <Grid container direction=\"column\" spacing={4} alignItems=\"center\">\n        <Grid item>\n          <Typography variant=\"h3\" component=\"h2\">\n            Signup\n          </Typography>\n        </Grid>\n        <Grid item>\n          <TextField\n            select\n            label=\"Category\"\n            variant=\"outlined\"\n            className={classes.inputBox}\n            value={signupDetails.role}\n            onChange={(event) => {\n              handleInput(\"role\", event.target.value);\n            }}\n          >\n            <MenuItem value=\"candidate\">Candidate</MenuItem>\n            <MenuItem value=\"employer\">Employer</MenuItem>\n          </TextField>\n        </Grid>\n        <Grid item>\n          <TextField\n            label=\"Name\"\n            value={signupDetails.name}\n            onChange={(event) => handleInput(\"name\", event.target.value)}\n            className={classes.inputBox}\n            error={inputErrorHandler.name.error}\n            helperText={inputErrorHandler.name.message}\n            onBlur={(event) => {\n              if (event.target.value === \"\") {\n                handleInputError(\"name\", true, \"Name is required\");\n              } else {\n                handleInputError(\"name\", false, \"\");\n              }\n            }}\n            variant=\"outlined\"\n          />\n        </Grid>\n        <Grid item>\n          <EmailInput\n            label=\"Email\"\n            value={signupDetails.email}\n            onChange={(event) => handleInput(\"email\", event.target.value)}\n            inputErrorHandler={inputErrorHandler}\n            handleInputError={handleInputError}\n            className={classes.inputBox}\n            required={true}\n          />\n        </Grid>\n        <Grid item>\n          <PasswordInput\n            label=\"Password\"\n            value={signupDetails.password}\n            onChange={(event) => handleInput(\"password\", event.target.value)}\n            className={classes.inputBox}\n            error={inputErrorHandler.password.error}\n            helperText={inputErrorHandler.password.message}\n            onBlur={(event) => {\n              if (event.target.value === \"\") {\n                handleInputError(\"password\", true, \"Password is required\");\n              } else {\n                handleInputError(\"password\", false, \"\");\n              }\n            }}\n          />\n        </Grid>\n\n        <Grid item>\n          <TextField\n            label=\"Address\"\n            value={signupDetails.address}\n            onChange={(event) => handleInput(\"address\", event.target.value)}\n            className={classes.inputBox}\n            error={inputErrorHandler.address.error}\n            helperText={inputErrorHandler.address.message}\n            onBlur={(event) => {\n              if (event.target.value === \"\") {\n                handleInputError(\"address\", true, \"Address is required\");\n              } else {\n                handleInputError(\"address\", false, \"\");\n              }\n            }}\n            variant=\"outlined\"\n          />\n        </Grid>\n        <Grid item>\n          <PhoneInput\n            country={\"in\"}\n            value={contact}\n            onChange={(contact) => setContact(contact)}\n          />\n        </Grid>\n        {signupDetails.role === \"candidate\" ? (\n          <>\n            <Grid item container direction=\"column\" spacing={4} alignItems=\"center\" className={classes.inputBox}>\n              <span>\n                Date of Birth\n              </span>\n              <DatePicker value={dob}\n                label=\"Date of Birth\"\n                onChange={(dob) => setDob(dob)} />\n            </Grid>\n            <Grid item>\n              <TextField\n                label=\"Father's Name\"\n                value={signupDetails.fathersName}\n                onChange={(event) => handleInput(\"fathersName\", event.target.value)}\n                className={classes.inputBox}\n                // error={inputErrorHandler.fathersName.error}\n                // helperText={inputErrorHandler.fathersName.message}\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid\n              container\n              className={classes.inputBox}\n              style={{ paddingLeft: 0, paddingRight: 0 }}\n            >\n              <Grid item >\n                <TextField\n                  style={{ marginBottom: 3 }}\n                  label={`Institution Name Intermediate`}\n                  className={classes.inputBox}\n                  value={education[0]}\n                  onChange={(event) => {\n                    handleEducationInput(\"intermediate\", event.target.value)\n                  }}\n                  variant=\"outlined\"\n                />\n              </Grid>\n            </Grid>\n            <Grid\n              container\n              className={classes.inputBox}\n              style={{ paddingLeft: 0, paddingRight: 0 }}\n            >\n              <Grid item >\n                <TextField\n                  style={{ marginBottom: 3 }}\n                  label={`Institution Name Highschool`}\n                  className={classes.inputBox}\n                  value={education[1]}\n                  onChange={(event) => {\n                    handleEducationInput(\"Highschool\", event.target.value)\n                  }}\n                  variant=\"outlined\"\n                />\n              </Grid>\n            </Grid>\n            <Grid\n              container\n              className={classes.inputBox}\n              style={{ paddingLeft: 0, paddingRight: 0 }}\n            >\n              <Grid item >\n                <TextField\n                  style={{ marginBottom: 3 }}\n                  label={`Institution Name BTech`}\n                  className={classes.inputBox}\n                  value={education[2]}\n                  onChange={(event) => {\n                    handleEducationInput(\"Btech\", event.target.value)\n                  }}\n                  variant=\"outlined\"\n                />\n              </Grid>\n            </Grid>\n            <MultifieldInputWorkExperience\n              workExperience={workExperience}\n              setWorkExperience={setWorkExperience}\n            />\n            <Grid item>\n              <ChipInput\n                className={classes.inputBox}\n                label=\"Skills\"\n                variant=\"outlined\"\n                helperText=\"Press enter to add skills\"\n                onChange={(chips) =>\n                  setSignupDetails({ ...signupDetails, skills: chips })\n                }\n              />\n            </Grid>\n          </>\n        ) : (\n          <>\n            <Grid item>\n              <TextField\n                label=\"Organization Name\"\n                value={signupDetails.organizationName}\n                onChange={(event) => handleInput(\"organizationName\", event.target.value)}\n                className={classes.inputBox}\n                variant=\"outlined\"\n              />\n            </Grid>\n          </>\n        )}\n\n        <Grid item>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => {\n              signupDetails.role === \"candidate\"\n                ? handleLogin()\n                : handleLoginEmployer();\n            }}\n            className={classes.submitButton}\n          >\n            Signup\n          </Button>\n        </Grid>\n      </Grid>\n    </Paper>\n  );\n};\n\nexport default Login;","E:\\work\\job-portal-main\\job-portal-main\\frontend\\src\\component\\Profile.js",["238","239","240","241","242","243","244","245","246","247","248","249","250","251","252","253"],"import { useContext, useEffect, useState } from \"react\";\nimport {\n  Button,\n  Grid,\n  Typography,\n  Modal,\n  Paper,\n  makeStyles,\n  TextField,\n} from \"@material-ui/core\";\nimport axios from \"axios\";\nimport ChipInput from \"material-ui-chip-input\";\nimport FileUploadInput from \"../lib/FileUploadInput\";\nimport DescriptionIcon from \"@material-ui/icons/Description\";\nimport FaceIcon from \"@material-ui/icons/Face\";\nimport PhoneInput from \"react-phone-input-2\";\nimport \"react-phone-input-2/lib/material.css\";\nimport { SetPopupContext } from \"../App\";\n\nimport apiList from \"../lib/apiList\";\nimport { userType } from \"../lib/isAuth\";\n\nconst useStyles = makeStyles((theme) => ({\n  body: {\n    height: \"inherit\",\n  },\n  popupDialog: {\n    height: \"100%\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    // padding: \"30px\",\n  },\n}));\n\n\nconst MultifieldInputWorkExperience = (props) => {\n  const classes = useStyles();\n  const { workExperience, setWorkExperience } = props;\n  const { newExp, setNewExp } = useState('');\n  return (\n    <>\n      {workExperience.map((obj, key) => (\n        <Grid item>\n          <TextField\n            style={{ marginBottom: 3, width: \"100%\" }}\n            label={`Work Experience #${key + 1}`}\n            className={classes.inputBox}\n            value={workExperience[key]}\n            onChange={(event) => {\n              const newWork = [...workExperience];\n              newWork[key] = event.target.value;\n              setWorkExperience(newWork);\n            }}\n            variant=\"outlined\"\n          />\n        </Grid>\n      ))}\n      <Grid item>\n        <Button\n          variant=\"contained\"\n          color=\"secondary\"\n          onClick={() =>\n            setWorkExperience([\n              ...workExperience,\n              \"\",\n            ])\n          }\n          className={classes.inputBox}\n        >\n          Add work experience\n        </Button>\n      </Grid>\n    </>\n  );\n};\n\nconst Profile = (props) => {\n  const classes = useStyles();\n  const setPopup = useContext(SetPopupContext);\n  const [userData, setUserData] = useState();\n  const [jobs, setJobs] = useState([]);\n  const [open, setOpen] = useState(false);\n  const [contact, setContact] = useState(\"\");\n  const [workExperience, setWorkExperience] = useState([]);\n  const [profileDetails, setProfileDetails] = useState({\n    email: \"\",\n    name: \"\",\n    role: localStorage.getItem(\"type\"),\n    dob: '',\n    address: '',\n    contact: '',\n    fathersName: '',\n    education: [\n      \"\",\n      \"\",\n      \"\"\n    ],\n    workExperience: [],\n    skills: [],\n    picture: '',\n    resume: '',\n    organizationName: \"\",\n    website: ''\n  });\n\n  const [education, setEducation] = useState([]);\n\n  const handleInput = (key, value) => {\n    setProfileDetails({\n      ...profileDetails,\n      [key]: value,\n    });\n  };\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  const getData = () => {\n    if (userType() === \"candidate\") {\n      axios\n        .get(apiList.candidateDetails, {\n          headers: {\n            authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n          },\n        })\n        .then((response) => {\n          console.log(response.data.res);\n          let email = localStorage.getItem(\"email\");\n          let profile = response.data.res\n            .filter(x => x.email === email);\n          setProfileDetails(\n            {\n              ...profile[0],\n              role: localStorage.getItem(\"type\")\n            });\n          setWorkExperience(profile[0].workExperience)\n          console.log(profileDetails)\n        })\n        .catch((err) => {\n          console.log(err.res);\n          setPopup({\n            open: true,\n            severity: \"error\",\n            message: \"Error\",\n          });\n        })\n    } else {\n      axios\n        .get(apiList.employerDetails, {\n          headers: {\n            authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n          },\n        })\n        .then((response) => {\n          console.log(response.data.res);\n          let email = localStorage.getItem(\"email\");\n          console.log(email)\n          let profile = response.data.res\n            .filter(x => x.email === email);\n          setProfileDetails(\n            {\n              ...profile[0],\n              role: localStorage.getItem(\"type\")\n            });\n          console.log(profileDetails)\n        })\n        .catch((err) => {\n          console.log(err.res);\n          setPopup({\n            open: true,\n            severity: \"error\",\n            message: \"Error\",\n          });\n        })\n    }\n  };\n\n\n  const handleEducationInput = (key, value) => {\n    let newDetails = profileDetails;\n    newDetails.education[key] = value;\n    setProfileDetails({\n      ...newDetails\n    });\n    console.log(profileDetails)\n  };\n\n  const handleUpdate = () => {\n    console.log(education);\n\n    let updatedDetails = {\n      ...profileDetails,\n      workExperience: workExperience\n    };\n\n    axios\n      .post(apiList.updateProfile, updatedDetails, {\n        headers: {\n          authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n        },\n      })\n      .then((response) => {\n        setPopup({\n          open: true,\n          severity: \"success\",\n          message: response.data.msg,\n        });\n        getData();\n      })\n      .catch((err) => {\n        setPopup({\n          open: true,\n          severity: \"error\",\n          message: \"Error: Unable to update\",\n        });\n        console.log(err);\n      });\n    setOpen(false);\n  };\n\n  return (\n    <>\n      <Grid\n        container\n        item\n        direction=\"column\"\n        alignItems=\"center\"\n        style={{ padding: \"30px\", minHeight: \"93vh\" }}\n      >\n        <Grid item>\n          <Typography variant=\"h2\">Profile</Typography>\n        </Grid>\n        <Grid item xs>\n          <Paper\n            style={{\n              padding: \"20px\",\n              outline: \"none\",\n              display: \"flex\",\n              flexDirection: \"column\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n            }}\n          >\n            <Grid container direction=\"column\" alignItems=\"stretch\" spacing={3} style={{minWidth: \"50vw\"}}>\n              {userType() === \"candidate\" ? (\n                <>\n                  <Grid item>\n                    <TextField\n                      label=\"Name\"\n                      value={profileDetails.name}\n                      onChange={(event) => handleInput(\"name\", event.target.value)}\n                      className={classes.inputBox}\n                      variant=\"outlined\"\n                      fullWidth\n                    />\n                  </Grid>\n                  <Grid item>\n                    <TextField\n                      label=\"Email\"\n                      value={profileDetails.email}\n                      onChange={(event) => handleInput(\"email\", event.target.value)}\n                      className={classes.inputBox}\n                      variant=\"outlined\"\n                      fullWidth\n                    />\n                  </Grid>\n                  <Grid item>\n                    <TextField\n                      label=\"Address\"\n                      value={profileDetails.address}\n                      onChange={(event) => handleInput(\"address\", event.target.value)}\n                      className={classes.inputBox}\n                      variant=\"outlined\"\n                      fullWidth\n                    />\n                  </Grid>\n                  <Grid item>\n                    <TextField\n                      label=\"Father's Name\"\n                      value={profileDetails.fathersName}\n                      onChange={(event) => handleInput(\"fathersName\", event.target.value)}\n                      className={classes.inputBox}\n                      variant=\"outlined\"\n                      fullWidth\n                    />\n                  </Grid>\n                  <Grid item >\n                    <TextField\n                      style={{ marginBottom: 3 }}\n                      label=\"Institution Name Intermediate\"\n                      className={classes.inputBox}\n                      value={profileDetails.education[0]}\n                      onChange={(event) => {\n                        handleEducationInput(0, event.target.value)\n                      }}\n                      variant=\"outlined\"\n                      fullWidth\n                    />\n                  </Grid>\n                  <Grid item >\n                    <TextField\n                      style={{ marginBottom: 3 }}\n                      label=\"Institution Name Highschool\"\n                      className={classes.inputBox}\n                      value={profileDetails.education[1]}\n                      onChange={(event) => {\n                        handleEducationInput(1, event.target.value)\n                      }}\n                      variant=\"outlined\"\n                      fullWidth\n                    />\n                  </Grid>\n                  <Grid item >\n                    <TextField\n                      style={{ marginBottom: 3 }}\n                      label=\"Institution Name BTech\"\n                      className={classes.inputBox}\n                      value={profileDetails.education[2]}\n                      onChange={(event) => {\n                        handleEducationInput(2, event.target.value)\n                      }}\n                      variant=\"outlined\"\n                      fullWidth\n                    />\n                  </Grid>\n                  <MultifieldInputWorkExperience\n                    workExperience={workExperience}\n                    setWorkExperience={setWorkExperience}\n                  />\n                  <Grid item>\n                    <ChipInput\n                      className={classes.inputBox}\n                      label=\"Skills\"\n                      variant=\"outlined\"\n                      helperText=\"Press enter to add skills\"\n                      value={profileDetails.skills}\n                      onAdd={(chip) =>\n                        setProfileDetails({\n                          ...profileDetails,\n                          skills: [...profileDetails.skills, chip],\n                        })\n                      }\n                      onDelete={(chip, index) => {\n                        let skills = profileDetails.skills;\n                        skills.splice(index, 1);\n                        setProfileDetails({\n                          ...profileDetails,\n                          skills: skills,\n                        });\n                      }}\n                      fullWidth\n                    />\n                  </Grid></>\n              ) : (\n                <>\n                  <Grid item>\n                    <TextField\n                      label=\"Name\"\n                      value={profileDetails.name}\n                      onChange={(event) => handleInput(\"name\", event.target.value)}\n                      className={classes.inputBox}\n                      variant=\"outlined\"\n                      fullWidth\n                    />\n                  </Grid>\n                  <Grid item>\n                    <TextField\n                      label=\"Email\"\n                      value={profileDetails.email}\n                      onChange={(event) => handleInput(\"email\", event.target.value)}\n                      className={classes.inputBox}\n                      variant=\"outlined\"\n                      fullWidth\n                    />\n                  </Grid>\n                  <Grid item>\n                    <TextField\n                      label=\"Organization Name\"\n                      value={profileDetails.organizationName}\n                      onChange={(event) => handleInput(\"organizationName\", event.target.value)}\n                      className={classes.inputBox}\n                      variant=\"outlined\"\n                      fullWidth\n                    />\n                  </Grid>\n                  <Grid item>\n                    <TextField\n                      label=\"Address\"\n                      value={profileDetails.address}\n                      onChange={(event) => handleInput(\"address\", event.target.value)}\n                      className={classes.inputBox}\n                      variant=\"outlined\"\n                      fullWidth\n                    />\n                  </Grid>\n                  <Grid item>\n                    <TextField\n                      label=\"Website\"\n                      value={profileDetails.website}\n                      onChange={(event) => handleInput(\"website\", event.target.value)}\n                      className={classes.inputBox}\n                      variant=\"outlined\"\n                      fullWidth\n                    />\n                  </Grid>\n                </>)}\n            </Grid>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              style={{ padding: \"10px 50px\", marginTop: \"30px\" }}\n              onClick={() => handleUpdate()}\n            >\n              Update Details\n            </Button>\n          </Paper>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport default Profile;\n","E:\\work\\job-portal-main\\job-portal-main\\frontend\\src\\component\\recruiter\\MyJobs.js",["254","255","256","257","258","259","260","261","262","263","264","265","266"],"import { useState, useEffect, useContext } from \"react\";\nimport {\n  Button,\n  Chip,\n  Grid,\n  IconButton,\n  InputAdornment,\n  makeStyles,\n  Paper,\n  TextField,\n  Typography,\n  Modal,\n  Slider,\n  FormControlLabel,\n  FormGroup,\n  MenuItem,\n  Checkbox,\n} from \"@material-ui/core\";\nimport { useHistory } from \"react-router-dom\";\nimport Rating from \"@material-ui/lab/Rating\";\nimport Pagination from \"@material-ui/lab/Pagination\";\nimport axios from \"axios\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\nimport ArrowUpwardIcon from \"@material-ui/icons/ArrowUpward\";\nimport ArrowDownwardIcon from \"@material-ui/icons/ArrowDownward\";\n\nimport { SetPopupContext } from \"../../App\";\n\nimport apiList from \"../../lib/apiList\";\n\nconst useStyles = makeStyles((theme) => ({\n  body: {\n    height: \"inherit\",\n  },\n  button: {\n    width: \"100%\",\n    height: \"100%\",\n  },\n  jobTileOuter: {\n    padding: \"30px\",\n    margin: \"20px 0\",\n    boxSizing: \"border-box\",\n    width: \"100%\",\n  },\n  popupDialog: {\n    height: \"100%\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  statusBlock: {\n    width: \"100%\",\n    height: \"100%\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    textTransform: \"uppercase\",\n  },\n}));\n\nconst JobTile = (props) => {\n  const classes = useStyles();\n  let history = useHistory();\n  const { job, getData } = props;\n  const setPopup = useContext(SetPopupContext);\n\n  const [open, setOpen] = useState(false);\n  const [openUpdate, setOpenUpdate] = useState(false);\n  const [jobDetails, setJobDetails] = useState(job);\n\n  console.log(jobDetails);\n\n  const handleInput = (key, value) => {\n    setJobDetails({\n      ...jobDetails,\n      [key]: value,\n    });\n  };\n\n  const handleClick = (location) => {\n    history.push(location);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleCloseUpdate = () => {\n    setOpenUpdate(false);\n  };\n\n  const handleDelete = () => {\n    console.log(job._id);\n    axios\n      .delete(`${apiList.jobs}/${job._id}`, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n        },\n      })\n      .then((response) => {\n        setPopup({\n          open: true,\n          severity: \"success\",\n          message: response.data.message,\n        });\n        getData();\n        handleClose();\n      })\n      .catch((err) => {\n        console.log(err.response);\n        setPopup({\n          open: true,\n          severity: \"error\",\n          message: err.response.data.message,\n        });\n        handleClose();\n      });\n  };\n\n  const handleJobUpdate = () => {\n    axios\n      .put(`${apiList.jobs}/${job._id}`, jobDetails, {\n        headers: {\n          Authorization: `bearer ${localStorage.getItem(\"token\")}`,\n        },\n      })\n      .then((response) => {\n        setPopup({\n          open: true,\n          severity: \"success\",\n          message: response.data.message,\n        });\n        getData();\n        handleCloseUpdate();\n      })\n      .catch((err) => {\n        console.log(err.response);\n        setPopup({\n          open: true,\n          severity: \"error\",\n          message: err.response.data.message,\n        });\n        handleCloseUpdate();\n      });\n  };\n\n\n  return (\n    <Paper className={classes.jobTileOuter} elevation={3}>\n      <Grid container>\n        <Grid container item xs={9} spacing={1} direction=\"column\">\n          <Grid item>\n            <Typography variant=\"h5\">{job.jobtitle}</Typography>\n          </Grid>\n          <Grid item>Salary : &#8377; {job.salary} per month</Grid>\n          <Grid item>Description : {job.description}</Grid>\n          <Grid item>Qualification : {job.qualification}</Grid>\n          <Grid item>Location : {job.joblocation}</Grid>\n          <Grid item>Job Sector : {job.jobsector}</Grid>\n        </Grid>\n        <Grid item container direction=\"column\" xs={3} style={{gap: 3}}>\n          <Grid item xs>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.statusBlock}\n              style={{\n                maxHeight: \"5em\"\n              }}\n              onClick={() => handleClick(`/job/applications/${job._id}`)}\n            >\n              View Applications\n            </Button>\n          </Grid>\n        </Grid>\n      </Grid>\n      <Modal\n        open={openUpdate}\n        onClose={handleCloseUpdate}\n        className={classes.popupDialog}\n      >\n        <Paper\n          style={{\n            padding: \"20px\",\n            outline: \"none\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            justifyContent: \"center\",\n            minWidth: \"30%\",\n            alignItems: \"center\",\n          }}\n        >\n          <Typography variant=\"h4\" style={{ marginBottom: \"10px\" }}>\n            Update Details\n          </Typography>\n          <Grid\n            container\n            direction=\"column\"\n            spacing={3}\n            style={{ margin: \"10px\" }}\n          >\n          </Grid>\n          <Grid container justify=\"center\" spacing={5}>\n            <Grid item>\n              <Button\n                variant=\"contained\"\n                color=\"secondary\"\n                style={{ padding: \"10px 50px\" }}\n                onClick={() => handleJobUpdate()}\n              >\n                Update\n              </Button>\n            </Grid>\n            <Grid item>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                style={{ padding: \"10px 50px\" }}\n                onClick={() => handleCloseUpdate()}\n              >\n                Cancel\n              </Button>\n            </Grid>\n          </Grid>\n        </Paper>\n      </Modal>\n    </Paper >\n  );\n};\n\nconst FilterPopup = (props) => {\n  const classes = useStyles();\n  const { open, handleClose, searchOptions, setSearchOptions, getData } = props;\n  return (\n    <Modal open={open} onClose={handleClose} className={classes.popupDialog}>\n      <Paper\n        style={{\n          padding: \"50px\",\n          outline: \"none\",\n          minWidth: \"50%\",\n        }}\n      >\n        <Grid container direction=\"column\" alignItems=\"center\" spacing={3}>\n          <Grid container item alignItems=\"center\">\n            <Grid item xs={3}>\n              Job Type\n            </Grid>\n            <Grid\n              container\n              item\n              xs={9}\n              justify=\"space-around\"\n            // alignItems=\"center\"\n            >\n              <Grid item>\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      name=\"fullTime\"\n                      checked={searchOptions.jobType.fullTime}\n                      onChange={(event) => {\n                        setSearchOptions({\n                          ...searchOptions,\n                          jobType: {\n                            ...searchOptions.jobType,\n                            [event.target.name]: event.target.checked,\n                          },\n                        });\n                      }}\n                    />\n                  }\n                  label=\"Full Time\"\n                />\n              </Grid>\n              <Grid item>\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      name=\"partTime\"\n                      checked={searchOptions.jobType.partTime}\n                      onChange={(event) => {\n                        setSearchOptions({\n                          ...searchOptions,\n                          jobType: {\n                            ...searchOptions.jobType,\n                            [event.target.name]: event.target.checked,\n                          },\n                        });\n                      }}\n                    />\n                  }\n                  label=\"Part Time\"\n                />\n              </Grid>\n              <Grid item>\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      name=\"wfh\"\n                      checked={searchOptions.jobType.wfh}\n                      onChange={(event) => {\n                        setSearchOptions({\n                          ...searchOptions,\n                          jobType: {\n                            ...searchOptions.jobType,\n                            [event.target.name]: event.target.checked,\n                          },\n                        });\n                      }}\n                    />\n                  }\n                  label=\"Work From Home\"\n                />\n              </Grid>\n            </Grid>\n          </Grid>\n          <Grid container item alignItems=\"center\">\n            <Grid item xs={3}>\n              Salary\n            </Grid>\n            <Grid item xs={9}>\n              <Slider\n                valueLabelDisplay=\"auto\"\n                valueLabelFormat={(value) => {\n                  return value * (100000 / 100);\n                }}\n                marks={[\n                  { value: 0, label: \"0\" },\n                  { value: 100, label: \"100000\" },\n                ]}\n                value={searchOptions.salary}\n                onChange={(event, value) =>\n                  setSearchOptions({\n                    ...searchOptions,\n                    salary: value,\n                  })\n                }\n              />\n            </Grid>\n          </Grid>\n          <Grid container item alignItems=\"center\">\n            <Grid item xs={3}>\n              Duration\n            </Grid>\n            <Grid item xs={9}>\n              <TextField\n                select\n                label=\"Duration\"\n                variant=\"outlined\"\n                fullWidth\n                value={searchOptions.duration}\n                onChange={(event) =>\n                  setSearchOptions({\n                    ...searchOptions,\n                    duration: event.target.value,\n                  })\n                }\n              >\n                <MenuItem value=\"0\">All</MenuItem>\n                <MenuItem value=\"1\">1</MenuItem>\n                <MenuItem value=\"2\">2</MenuItem>\n                <MenuItem value=\"3\">3</MenuItem>\n                <MenuItem value=\"4\">4</MenuItem>\n                <MenuItem value=\"5\">5</MenuItem>\n                <MenuItem value=\"6\">6</MenuItem>\n                <MenuItem value=\"7\">7</MenuItem>\n              </TextField>\n            </Grid>\n          </Grid>\n          <Grid container item alignItems=\"center\">\n            <Grid item xs={3}>\n              Sort\n            </Grid>\n            <Grid item container direction=\"row\" xs={9}>\n              <Grid\n                item\n                container\n                xs={4}\n                justify=\"space-around\"\n                alignItems=\"center\"\n                style={{ border: \"1px solid #D1D1D1\", borderRadius: \"5px\" }}\n              >\n                <Grid item>\n                  <Checkbox\n                    name=\"salary\"\n                    checked={searchOptions.sort.salary.status}\n                    onChange={(event) =>\n                      setSearchOptions({\n                        ...searchOptions,\n                        sort: {\n                          ...searchOptions.sort,\n                          salary: {\n                            ...searchOptions.sort.salary,\n                            status: event.target.checked,\n                          },\n                        },\n                      })\n                    }\n                    id=\"salary\"\n                  />\n                </Grid>\n                <Grid item>\n                  <label for=\"salary\">\n                    <Typography>Salary</Typography>\n                  </label>\n                </Grid>\n                <Grid item>\n                  <IconButton\n                    disabled={!searchOptions.sort.salary.status}\n                    onClick={() => {\n                      setSearchOptions({\n                        ...searchOptions,\n                        sort: {\n                          ...searchOptions.sort,\n                          salary: {\n                            ...searchOptions.sort.salary,\n                            desc: !searchOptions.sort.salary.desc,\n                          },\n                        },\n                      });\n                    }}\n                  >\n                    {searchOptions.sort.salary.desc ? (\n                      <ArrowDownwardIcon />\n                    ) : (\n                      <ArrowUpwardIcon />\n                    )}\n                  </IconButton>\n                </Grid>\n              </Grid>\n              <Grid\n                item\n                container\n                xs={4}\n                justify=\"space-around\"\n                alignItems=\"center\"\n                style={{ border: \"1px solid #D1D1D1\", borderRadius: \"5px\" }}\n              >\n                <Grid item>\n                  <Checkbox\n                    name=\"duration\"\n                    checked={searchOptions.sort.duration.status}\n                    onChange={(event) =>\n                      setSearchOptions({\n                        ...searchOptions,\n                        sort: {\n                          ...searchOptions.sort,\n                          duration: {\n                            ...searchOptions.sort.duration,\n                            status: event.target.checked,\n                          },\n                        },\n                      })\n                    }\n                    id=\"duration\"\n                  />\n                </Grid>\n                <Grid item>\n                  <label for=\"duration\">\n                    <Typography>Duration</Typography>\n                  </label>\n                </Grid>\n                <Grid item>\n                  <IconButton\n                    disabled={!searchOptions.sort.duration.status}\n                    onClick={() => {\n                      setSearchOptions({\n                        ...searchOptions,\n                        sort: {\n                          ...searchOptions.sort,\n                          duration: {\n                            ...searchOptions.sort.duration,\n                            desc: !searchOptions.sort.duration.desc,\n                          },\n                        },\n                      });\n                    }}\n                  >\n                    {searchOptions.sort.duration.desc ? (\n                      <ArrowDownwardIcon />\n                    ) : (\n                      <ArrowUpwardIcon />\n                    )}\n                  </IconButton>\n                </Grid>\n              </Grid>\n              <Grid\n                item\n                container\n                xs={4}\n                justify=\"space-around\"\n                alignItems=\"center\"\n                style={{ border: \"1px solid #D1D1D1\", borderRadius: \"5px\" }}\n              >\n                <Grid item>\n                  <Checkbox\n                    name=\"rating\"\n                    checked={searchOptions.sort.rating.status}\n                    onChange={(event) =>\n                      setSearchOptions({\n                        ...searchOptions,\n                        sort: {\n                          ...searchOptions.sort,\n                          rating: {\n                            ...searchOptions.sort.rating,\n                            status: event.target.checked,\n                          },\n                        },\n                      })\n                    }\n                    id=\"rating\"\n                  />\n                </Grid>\n                <Grid item>\n                  <label for=\"rating\">\n                    <Typography>Rating</Typography>\n                  </label>\n                </Grid>\n                <Grid item>\n                  <IconButton\n                    disabled={!searchOptions.sort.rating.status}\n                    onClick={() => {\n                      setSearchOptions({\n                        ...searchOptions,\n                        sort: {\n                          ...searchOptions.sort,\n                          rating: {\n                            ...searchOptions.sort.rating,\n                            desc: !searchOptions.sort.rating.desc,\n                          },\n                        },\n                      });\n                    }}\n                  >\n                    {searchOptions.sort.rating.desc ? (\n                      <ArrowDownwardIcon />\n                    ) : (\n                      <ArrowUpwardIcon />\n                    )}\n                  </IconButton>\n                </Grid>\n              </Grid>\n            </Grid>\n          </Grid>\n\n          <Grid item>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              style={{ padding: \"10px 50px\" }}\n              onClick={() => getData()}\n            >\n              Apply\n            </Button>\n          </Grid>\n        </Grid>\n      </Paper>\n    </Modal>\n  );\n};\n\nconst MyJobs = (props) => {\n  const [jobs, setJobs] = useState([]);\n  const [empId, setEmpId] = useState(\"\")\n\n  const setPopup = useContext(SetPopupContext);\n  useEffect(() => {\n    getData();\n  }, []);\n\n\n  const getData = () => {\n    axios\n      .get(apiList.employerDetails, {\n        headers: {\n          authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n        },\n      })\n      .then((response) => {\n        console.log(response.data.res);\n        let email = localStorage.getItem(\"email\");\n        let profile = response.data.res\n          .filter(x => x.email === email);\n        setEmpId(profile[0]._id);\n        console.log(profile[0]._id)\n\n        axios\n          .get(apiList.jobsByEmployer + profile[0]._id, {\n            headers: {\n              authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n            },\n          })\n          .then((response) => {\n            console.log(response.data.res);\n            setJobs(response.data.res);\n          })\n          .catch((err) => {\n            console.log(err.response);\n            setPopup({\n              open: true,\n              severity: \"error\",\n              message: \"Error\",\n            });\n          });\n\n      })\n      .catch((err) => {\n        console.log(err.res);\n        setPopup({\n          open: true,\n          severity: \"error\",\n          message: \"Error\",\n        });\n      });\n\n  };\n\n  return (\n    <>\n      <Grid\n        container\n        item\n        direction=\"column\"\n        alignItems=\"center\"\n        style={{ padding: \"30px\", minHeight: \"93vh\" }}\n      >\n        <Grid\n          item\n          container\n          direction=\"column\"\n          justify=\"center\"\n          alignItems=\"center\"\n        >\n          <Grid item xs>\n            <Typography variant=\"h2\">Posted Jobs</Typography>\n          </Grid>\n        </Grid>\n\n        <Grid\n          container\n          item\n          xs\n          direction=\"column\"\n          alignItems=\"stretch\"\n          justify=\"center\"\n        >\n          {jobs.length > 0 ? (\n            jobs.map((job) => {\n              return <JobTile job={job} />;\n            })\n          ) : (\n            <Typography variant=\"h5\" style={{ textAlign: \"center\" }}>\n              No Jobs found\n            </Typography>\n          )}\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport default MyJobs;\n","E:\\work\\job-portal-main\\job-portal-main\\frontend\\src\\component\\recruiter\\JobApplications.js",["267","268","269","270","271","272","273","274","275","276","277","278","279","280","281","282","283","284","285"],"import { useState, useEffect, useContext } from \"react\";\nimport {\n  Button,\n  Chip,\n  Grid,\n  IconButton,\n  InputAdornment,\n  makeStyles,\n  Paper,\n  TextField,\n  Typography,\n  Modal,\n  Slider,\n  FormControlLabel,\n  FormGroup,\n  MenuItem,\n  Checkbox,\n  Avatar,\n} from \"@material-ui/core\";\nimport { useParams } from \"react-router-dom\";\nimport Rating from \"@material-ui/lab/Rating\";\nimport axios from \"axios\";\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\nimport ArrowUpwardIcon from \"@material-ui/icons/ArrowUpward\";\nimport ArrowDownwardIcon from \"@material-ui/icons/ArrowDownward\";\n\nimport { SetPopupContext } from \"../../App\";\n\nimport apiList, { server } from \"../../lib/apiList\";\n\nconst useStyles = makeStyles((theme) => ({\n  body: {\n    height: \"inherit\",\n  },\n  statusBlock: {\n    width: \"100%\",\n    height: \"100%\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    textTransform: \"uppercase\",\n  },\n  jobTileOuter: {\n    padding: \"30px\",\n    margin: \"20px 0\",\n    boxSizing: \"border-box\",\n    width: \"100%\",\n  },\n  popupDialog: {\n    height: \"100%\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  avatar: {\n    width: theme.spacing(17),\n    height: theme.spacing(17),\n  },\n}));\n\nconst ApplicationTile = (props) => {\n  const classes = useStyles();\n  const { application, jobId, getData } = props;\n  const setPopup = useContext(SetPopupContext);\n  const [open, setOpen] = useState(false);\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const colorSet = {\n    applied: \"#3454D1\",\n    shortlisted: \"#DC851F\",\n    accepted: \"#09BC8A\",\n    rejected: \"#D1345B\",\n    deleted: \"#B49A67\",\n    cancelled: \"#FF8484\",\n    finished: \"#4EA5D9\",\n  };\n\n\n  const updateStatus = (status) => {\n    const statusData = {\n      applicationStatus: status,\n      jobId: jobId,\n      candId: application._id\n    };\n    axios\n      .post(apiList.evaluateCandidate, statusData, {\n        headers: {\n          authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n        },\n      })\n      .then((response) => {\n        setPopup({\n          open: true,\n          severity: \"success\",\n          message: response.data.message,\n        });\n        getData();\n      })\n      .catch((err) => {\n        setPopup({\n          open: true,\n          severity: \"error\",\n          message: err.response.data.message,\n        });\n        console.log(err.response);\n      });\n  };\n\n  const buttonSet = {\n    Applied: (\n      <>\n        <Grid item xs style={{\n          marginRight: \"2em\",\n          maxHeight: \"3em\",\n          maxWidth: \"12em\"\n        }}>\n          <Button\n            className={classes.statusBlock}\n            style={{\n              background: colorSet[\"shortlisted\"],\n              color: \"#ffffff\"\n            }}\n            onClick={() => updateStatus(\"Shortlisted\")}\n          >\n            Shortlist\n          </Button>\n        </Grid>\n        <Grid item xs style={{\n          marginRight: \"2em\",\n          maxHeight: \"3em\",\n          maxWidth: \"12em\"\n        }}>\n          <Button\n            className={classes.statusBlock}\n            style={{\n              background: colorSet[\"rejected\"],\n              color: \"#ffffff\",\n            }}\n            onClick={() => updateStatus(\"Rejected\")}\n          >\n            Reject\n          </Button>\n        </Grid>\n      </>\n    ),\n    Shortlisted: (\n      <>\n        <Grid item xs\n          style={{\n            marginRight: \"2em\",\n            maxHeight: \"3em\",\n            maxWidth: \"12em\"\n          }}>\n          <Button\n            className={classes.statusBlock}\n            style={{\n              background: colorSet[\"accepted\"],\n              color: \"#ffffff\"\n            }}\n            onClick={() => updateStatus(\"Accepted\")}\n          >\n            Accept\n          </Button>\n        </Grid>\n        <Grid item xs style={{\n          marginRight: \"2em\",\n          maxHeight: \"3em\",\n          maxWidth: \"12em\"\n        }}>\n          <Button\n            className={classes.statusBlock}\n            style={{\n              background: colorSet[\"Rejected\"],\n              color: \"#ffffff\",\n            }}\n            onClick={() => updateStatus(\"rejected\")}\n          >\n            Reject\n          </Button>\n        </Grid>\n      </>\n    ),\n    Rejected: (\n      <>\n        <Grid item xs style={{\n          marginRight: \"2em\",\n          maxHeight: \"3em\",\n          maxWidth: \"12em\"\n        }}>\n          <Paper\n            className={classes.statusBlock}\n            style={{\n              background: colorSet[\"rejected\"],\n              color: \"#ffffff\",\n            }}\n          >\n            Rejected\n          </Paper>\n        </Grid>\n      </>\n    ),\n    Accepted: (\n      <>\n        <Grid item xs style={{\n          marginRight: \"2em\",\n          maxHeight: \"3em\",\n          maxWidth: \"12em\"\n        }}>\n          <Paper\n            className={classes.statusBlock}\n            style={{\n              background: colorSet[\"accepted\"],\n              color: \"#ffffff\",\n            }}\n          >\n            Accepted\n          </Paper>\n        </Grid>\n      </>\n    ),\n    Cancelled: (\n      <>\n        <Grid item xs style={{\n          marginRight: \"2em\",\n          maxHeight: \"3em\",\n          maxWidth: \"12em\"\n        }}>\n          <Paper\n            className={classes.statusBlock}\n            style={{\n              background: colorSet[\"cancelled\"],\n              color: \"#ffffff\",\n            }}\n          >\n            Cancelled\n          </Paper>\n        </Grid>\n      </>\n    ),\n    Finished: (\n      <>\n        <Grid item xs style={{\n          marginRight: \"2em\",\n          maxHeight: \"3em\",\n          maxWidth: \"12em\"\n        }}>\n          <Paper\n            className={classes.statusBlock}\n            style={{\n              background: colorSet[\"finished\"],\n              color: \"#ffffff\",\n            }}\n          >\n            Finished\n          </Paper>\n        </Grid>\n      </>\n    ),\n  };\n\n  const getButtonSet = () => {\n    if (application.applicationStatus in buttonSet) {\n      return (<>\n        <Grid item container xs>\n          {buttonSet[application.applicationStatus]}\n        </Grid>\n      </>);\n    } else {\n      return (<>\n        <Grid item xs>\n          <Paper\n            className={classes.statusBlock}\n            style={{\n              background: colorSet[\"finished\"],\n              color: \"#ffffff\",\n              maxHeight: \"3em\",\n              maxWidth: \"12em\"\n            }}\n          >\n            {application.applicationStatus}\n          </Paper>\n        </Grid>\n      </>)\n    }\n  }\n\n  return (\n    <Paper className={classes.jobTileOuter} elevation={3}>\n      <Grid container>\n        <Grid\n          item\n          xs={2}\n          style={{\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n          }}\n        >\n          {/* <Avatar\n            src={`${server}${application.jobApplicant.profile}`}\n            className={classes.avatar}\n          /> */}\n        </Grid>\n        <Grid container item xs={7} spacing={1} direction=\"column\">\n          <Grid item>\n            <Typography variant=\"h5\">\n              {application.name}\n            </Typography>\n            <Grid item>Salary : &#8377; {application.salary} per month</Grid>\n            <Grid item>Description : {application.description}</Grid>\n            <Grid item>Qualification : {application.qualification}</Grid>\n            <Grid item>Location : {application.joblocation}</Grid>\n            <Grid item>Job Sector : {application.jobsector}</Grid>\n          </Grid>\n          <Grid item>\n            {application.skills.map((skill) => (\n              <Chip label={skill} style={{ marginRight: \"2px\" }} />\n            ))}\n          </Grid>\n        </Grid>\n        <Grid item container direction=\"column\" xs={3}>\n          {getButtonSet()}\n        </Grid>\n      </Grid>\n      <Modal open={open} onClose={handleClose} className={classes.popupDialog}>\n        <Paper\n          style={{\n            padding: \"20px\",\n            outline: \"none\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            justifyContent: \"center\",\n            minWidth: \"30%\",\n            alignItems: \"center\",\n          }}\n        >\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            style={{ padding: \"10px 50px\" }}\n          >\n            Submit\n          </Button>\n        </Paper>\n      </Modal>\n    </Paper>\n  );\n};\n\nconst JobApplications = (props) => {\n  const setPopup = useContext(SetPopupContext);\n  const [applications, setApplications] = useState([]);\n  const { jobId } = useParams();\n  const [filterOpen, setFilterOpen] = useState(false);\n  const [searchOptions, setSearchOptions] = useState({\n    status: {\n      all: false,\n      applied: false,\n      shortlisted: false,\n    },\n    sort: {\n      \"jobApplicant.name\": {\n        status: false,\n        desc: false,\n      },\n      dateOfApplication: {\n        status: true,\n        desc: true,\n      },\n      \"jobApplicant.rating\": {\n        status: false,\n        desc: false,\n      },\n    },\n  });\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  const getData = () => {\n    axios\n      .get(apiList.jobApplications + jobId, {\n        headers: {\n          authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n        },\n      })\n      .then((response) => {\n        console.log(response.data.res);\n        setApplications(response.data.res);\n      })\n      .catch((err) => {\n        console.log(err.response);\n        // console.log(err.response.data);\n        setApplications([]);\n        setPopup({\n          open: true,\n          severity: \"error\",\n          message: err.response.data.message,\n        });\n      });\n  };\n\n  return (\n    <>\n      <Grid\n        container\n        item\n        direction=\"column\"\n        alignItems=\"center\"\n        style={{ padding: \"30px\", minHeight: \"93vh\" }}\n      >\n        <Grid item>\n          <Typography variant=\"h2\">Applications</Typography>\n        </Grid>\n        <Grid\n          container\n          item\n          xs\n          direction=\"column\"\n          style={{ width: \"100%\" }}\n          alignItems=\"stretch\"\n          justify=\"center\"\n        >\n          {applications.length > 0 ? (\n            applications.map((obj) => (\n              <Grid item>\n                {/* {console.log(obj)} */}\n                <ApplicationTile application={obj} jobId={jobId} getData={getData} />\n              </Grid>\n            ))\n          ) : (\n            <Typography variant=\"h5\" style={{ textAlign: \"center\" }}>\n              No Applications Found\n            </Typography>\n          )}\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport default JobApplications;\n","E:\\work\\job-portal-main\\job-portal-main\\frontend\\src\\component\\recruiter\\Profile.js",["286","287","288"],"import { useContext, useEffect, useState } from \"react\";\nimport {\n  Button,\n  Grid,\n  Typography,\n  Modal,\n  Paper,\n  makeStyles,\n  TextField,\n} from \"@material-ui/core\";\nimport axios from \"axios\";\nimport PhoneInput from \"react-phone-input-2\";\nimport \"react-phone-input-2/lib/material.css\";\n\nimport { SetPopupContext } from \"../../App\";\n\nimport apiList from \"../../lib/apiList\";\n\nconst useStyles = makeStyles((theme) => ({\n  body: {\n    height: \"inherit\",\n  },\n  popupDialog: {\n    height: \"100%\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    // padding: \"30px\",\n  },\n}));\n\nconst Profile = (props) => {\n  const classes = useStyles();\n  const setPopup = useContext(SetPopupContext);\n\n  const [profileDetails, setProfileDetails] = useState({\n    name: \"\",\n    bio: \"\",\n    contactNumber: \"\",\n  });\n\n  const [phone, setPhone] = useState(\"\");\n\n  const handleInput = (key, value) => {\n    setProfileDetails({\n      ...profileDetails,\n      [key]: value,\n    });\n  };\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  const getData = () => {\n    axios\n      .get(apiList.employerDetails, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n        },\n      })\n      .then((response) => {\n        console.log(response.data);\n        setProfileDetails(response.data);\n        setPhone(response.data.contactNumber);\n      })\n      .catch((err) => {\n        console.log(err.response.data);\n        setPopup({\n          open: true,\n          severity: \"error\",\n          message: \"Error\",\n        });\n      });\n  };\n\n  const handleUpdate = () => {\n    let updatedDetails = {\n      ...profileDetails,\n    };\n    if (phone !== \"\") {\n      updatedDetails = {\n        ...profileDetails,\n        contactNumber: `+${phone}`,\n      };\n    } else {\n      updatedDetails = {\n        ...profileDetails,\n        contactNumber: \"\",\n      };\n    }\n\n    axios\n      .put(apiList.user, updatedDetails, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n        },\n      })\n      .then((response) => {\n        setPopup({\n          open: true,\n          severity: \"success\",\n          message: response.data.message,\n        });\n        getData();\n      })\n      .catch((err) => {\n        setPopup({\n          open: true,\n          severity: \"error\",\n          message: err.response.data.message,\n        });\n        console.log(err.response);\n      });\n  };\n\n  return (\n    <>\n      <Grid\n        container\n        item\n        direction=\"column\"\n        alignItems=\"center\"\n        style={{ padding: \"30px\", minHeight: \"93vh\" }}\n      >\n        <Grid item>\n          <Typography variant=\"h2\">Profile</Typography>\n        </Grid>\n        <Grid item xs style={{ width: \"100%\" }}>\n          <Paper\n            style={{\n              padding: \"20px\",\n              outline: \"none\",\n              display: \"flex\",\n              flexDirection: \"column\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              //   width: \"60%\",\n            }}\n          >\n            <Grid container direction=\"column\" alignItems=\"stretch\" spacing={3}>\n              <Grid item>\n                <TextField\n                  label=\"Name\"\n                  value={profileDetails.name}\n                  onChange={(event) => handleInput(\"name\", event.target.value)}\n                  className={classes.inputBox}\n                  variant=\"outlined\"\n                  fullWidth\n                  style={{ width: \"100%\" }}\n                />\n              </Grid>\n              <Grid item>\n                <TextField\n                  label=\"Bio (upto 250 words)\"\n                  multiline\n                  rows={8}\n                  style={{ width: \"100%\" }}\n                  variant=\"outlined\"\n                  value={profileDetails.bio}\n                  onChange={(event) => {\n                    if (\n                      event.target.value.split(\" \").filter(function (n) {\n                        return n != \"\";\n                      }).length <= 250\n                    ) {\n                      handleInput(\"bio\", event.target.value);\n                    }\n                  }}\n                />\n              </Grid>\n              <Grid\n                item\n                style={{\n                  display: \"flex\",\n                  justifyContent: \"center\",\n                }}\n              >\n                <PhoneInput\n                  country={\"in\"}\n                  value={phone}\n                  onChange={(phone) => setPhone(phone)}\n                  style={{ width: \"auto\" }}\n                />\n              </Grid>\n            </Grid>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              style={{ padding: \"10px 50px\", marginTop: \"30px\" }}\n              onClick={() => handleUpdate()}\n            >\n              Update Details\n            </Button>\n          </Paper>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport default Profile;\n","E:\\work\\job-portal-main\\job-portal-main\\frontend\\src\\lib\\MessagePopup.js",["289"],"import { Snackbar, Slide } from \"@material-ui/core\";\nimport { Alert } from \"@material-ui/lab\";\n\nconst MessagePopup = (props) => {\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    props.setOpen(false);\n  };\n  return (\n    <Snackbar open={props.open} onClose={handleClose} autoHideDuration={2000}>\n      <Alert onClose={handleClose} severity={props.severity}>\n        {props.message}\n      </Alert>\n    </Snackbar>\n  );\n};\n\nexport default MessagePopup;\n","E:\\work\\job-portal-main\\job-portal-main\\frontend\\src\\component\\Home.js",["290","291","292","293","294","295","296","297","298","299","300","301","302","303","304","305","306","307"],"import { useState, useEffect, useContext } from \"react\";\nimport {\n  Button,\n  Chip,\n  Grid,\n  IconButton,\n  InputAdornment,\n  makeStyles,\n  Paper,\n  TextField,\n  Typography,\n  Modal,\n  Slider,\n  FormControlLabel,\n  FormGroup,\n  MenuItem,\n  Checkbox,\n} from \"@material-ui/core\";\nimport Rating from \"@material-ui/lab/Rating\";\nimport Pagination from \"@material-ui/lab/Pagination\";\nimport axios from \"axios\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\nimport ArrowUpwardIcon from \"@material-ui/icons/ArrowUpward\";\nimport ArrowDownwardIcon from \"@material-ui/icons/ArrowDownward\";\n\nimport { SetPopupContext } from \"../App\";\n\nimport apiList from \"../lib/apiList\";\nimport isAuth, { userType } from \"../lib/isAuth\";\n\nconst useStyles = makeStyles((theme) => ({\n  body: {\n    height: \"inherit\",\n  },\n  button: {\n    width: \"100%\",\n    height: \"100%\",\n  },\n  jobTileOuter: {\n    padding: \"30px\",\n    margin: \"20px 0\",\n    boxSizing: \"border-box\",\n    width: \"100%\",\n  },\n  popupDialog: {\n    height: \"100%\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n}));\n\nconst JobTile = (props) => {\n\n\n  const classes = useStyles();\n  const { job } = props;\n  const setPopup = useContext(SetPopupContext);\n  useEffect(() => {\n    getOrgName();\n    if (isAuth()){\n      if (userType() !== \"employer\") \n        getcandId()}\n  }, []);\n\n  const [organizationName, setOrganizationName] = useState(\"\");\n  const [candId, setCadidId] = useState(\"\");\n  const [open, setOpen] = useState(false);\n  const [sop, setSop] = useState(\"\");\n\n  const handleClose = () => {\n    setOpen(false);\n    setSop(\"\");\n  };\n\n  const getcandId = () => {\n    axios\n      .get(apiList.candidateDetails, {\n        headers: {\n          authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n        },\n      })\n      .then((response) => {\n        console.log(response.data.res);\n        let email = localStorage.getItem(\"email\");\n        console.log(email)\n        let profile = response.data.res\n          .filter(x => x.email === email);\n        setCadidId(profile[0]._id);\n      })\n      .catch((err) => {\n        console.log(err.res);\n        setPopup({\n          open: true,\n          severity: \"error\",\n          message: \"Error\",\n        });\n      });\n  };\n\n  const getOrgName = () => {\n    axios\n      .get(apiList.employerDetails + job.empId, {\n        headers: {\n          authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n        },\n      })\n      .then((response) => {\n        console.log(response.data.res.organizationName);\n        setOrganizationName(response.data.res.organizationName)\n      })\n      .catch((err) => {\n        console.log(err);\n        setPopup({\n          open: true,\n          severity: \"error\",\n          message: \"Error\",\n        });\n      });\n  }\n\n  const handleApply = () => {\n    console.log(job._id);\n    axios\n      .post(\n        `${apiList.jobApply}`,\n        {\n          jobId: job._id,\n          candId: candId,\n          applicationStatus: \"Applied\"\n        },\n        {\n          headers: {\n            authorization: `bearer ${localStorage.getItem(\"token\")}`,\n          },\n        }\n      )\n      .then((response) => {\n        setPopup({\n          open: true,\n          severity: \"success\",\n          message: response.data.msg,\n        });\n        handleClose();\n      })\n      .catch((err) => {\n        console.log(err.response);\n        setPopup({\n          open: true,\n          severity: \"error\",\n          message: err.response.data.err,\n        });\n        handleClose();\n      });\n  };\n\n  return (\n    <Paper className={classes.jobTileOuter} elevation={2}>\n      <Grid container>\n        <Grid container item xs={10} spacing={1} direction=\"column\">\n          <Grid item>\n            <Typography variant=\"h5\">{job.jobtitle}</Typography>\n          </Grid>\n          <Grid item>Salary : &#8377; {job.salary} per month</Grid>\n          <Grid item>Description : {job.description}</Grid>\n          <Grid item>Qualification : {job.qualification}</Grid>\n          <Grid item>Location : {job.joblocation}</Grid>\n          <Grid item>Job Sector : {job.jobsector}</Grid>\n          <Grid item>Posted by : {organizationName}</Grid>\n        </Grid>\n        <Grid item xs={1}>\n          <Button\n            style={{\n              maxHeight: \"3em\"\n            }}\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.button}\n            onClick={() => {\n              setOpen(true);\n            }}\n            disabled={userType() === \"employer\"}\n          >\n            Apply\n          </Button>\n        </Grid>\n      </Grid>\n      <Modal open={open} onClose={handleClose} className={classes.popupDialog}>\n        <Paper\n          style={{\n            padding: \"20px\",\n            outline: \"none\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            gap: \"1em\",\n            justifyContent: \"center\",\n            minWidth: \"50%\",\n            alignItems: \"center\",\n          }}\n        >\n          <Grid item>\n            <Typography variant=\"h5\">{job.jobtitle}</Typography>\n          </Grid>\n          <Grid item>Salary : &#8377; {job.salary} per month</Grid>\n          <Grid item>Posted by : {organizationName}</Grid>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            style={{ padding: \"10px 50px\" }}\n            onClick={() => handleApply()}\n          >\n            Submit\n          </Button>\n        </Paper>\n      </Modal>\n    </Paper>\n  );\n};\n\n//   const classes = useStyles();\n//   const { open, handleClose, searchOptions, setSearchOptions, getData } = props;\n//   return (\n//     <Modal open={open} onClose={handleClose} className={classes.popupDialog}>\n//       <Paper\n//         style={{\n//           padding: \"50px\",\n//           outline: \"none\",\n//           minWidth: \"50%\",\n//         }}\n//       >\n//         <Grid container direction=\"column\" alignItems=\"center\" spacing={3}>\n//           <Grid container item alignItems=\"center\">\n//             <Grid item xs={3}>\n//               Job Type\n//             </Grid>\n//             <Grid\n//               container\n//               item\n//               xs={9}\n//               justify=\"space-around\"\n//             // alignItems=\"center\"\n//             >\n//               <Grid item>\n//                 <FormControlLabel\n//                   control={\n//                     <Checkbox\n//                       name=\"fullTime\"\n//                       checked={searchOptions.jobType.fullTime}\n//                       onChange={(event) => {\n//                         setSearchOptions({\n//                           ...searchOptions,\n//                           jobType: {\n//                             ...searchOptions.jobType,\n//                             [event.target.name]: event.target.checked,\n//                           },\n//                         });\n//                       }}\n//                     />\n//                   }\n//                   label=\"Full Time\"\n//                 />\n//               </Grid>\n//               <Grid item>\n//                 <FormControlLabel\n//                   control={\n//                     <Checkbox\n//                       name=\"partTime\"\n//                       checked={searchOptions.jobType.partTime}\n//                       onChange={(event) => {\n//                         setSearchOptions({\n//                           ...searchOptions,\n//                           jobType: {\n//                             ...searchOptions.jobType,\n//                             [event.target.name]: event.target.checked,\n//                           },\n//                         });\n//                       }}\n//                     />\n//                   }\n//                   label=\"Part Time\"\n//                 />\n//               </Grid>\n//               <Grid item>\n//                 <FormControlLabel\n//                   control={\n//                     <Checkbox\n//                       name=\"wfh\"\n//                       checked={searchOptions.jobType.wfh}\n//                       onChange={(event) => {\n//                         setSearchOptions({\n//                           ...searchOptions,\n//                           jobType: {\n//                             ...searchOptions.jobType,\n//                             [event.target.name]: event.target.checked,\n//                           },\n//                         });\n//                       }}\n//                     />\n//                   }\n//                   label=\"Work From Home\"\n//                 />\n//               </Grid>\n//             </Grid>\n//           </Grid>\n//           <Grid container item alignItems=\"center\">\n//             <Grid item xs={3}>\n//               Salary\n//             </Grid>\n//             <Grid item xs={9}>\n//               <Slider\n//                 valueLabelDisplay=\"auto\"\n//                 valueLabelFormat={(value) => {\n//                   return value * (100000 / 100);\n//                 }}\n//                 marks={[\n//                   { value: 0, label: \"0\" },\n//                   { value: 100, label: \"100000\" },\n//                 ]}\n//                 value={searchOptions.salary}\n//                 onChange={(event, value) =>\n//                   setSearchOptions({\n//                     ...searchOptions,\n//                     salary: value,\n//                   })\n//                 }\n//               />\n//             </Grid>\n//           </Grid>\n//           <Grid container item alignItems=\"center\">\n//             <Grid item xs={3}>\n//               Duration\n//             </Grid>\n//             <Grid item xs={9}>\n//               <TextField\n//                 select\n//                 label=\"Duration\"\n//                 variant=\"outlined\"\n//                 fullWidth\n//                 value={searchOptions.duration}\n//                 onChange={(event) =>\n//                   setSearchOptions({\n//                     ...searchOptions,\n//                     duration: event.target.value,\n//                   })\n//                 }\n//               >\n//                 <MenuItem value=\"0\">All</MenuItem>\n//                 <MenuItem value=\"1\">1</MenuItem>\n//                 <MenuItem value=\"2\">2</MenuItem>\n//                 <MenuItem value=\"3\">3</MenuItem>\n//                 <MenuItem value=\"4\">4</MenuItem>\n//                 <MenuItem value=\"5\">5</MenuItem>\n//                 <MenuItem value=\"6\">6</MenuItem>\n//                 <MenuItem value=\"7\">7</MenuItem>\n//               </TextField>\n//             </Grid>\n//           </Grid>\n//           <Grid container item alignItems=\"center\">\n//             <Grid item xs={3}>\n//               Sort\n//             </Grid>\n//             <Grid item container direction=\"row\" xs={9}>\n//               <Grid\n//                 item\n//                 container\n//                 xs={4}\n//                 justify=\"space-around\"\n//                 alignItems=\"center\"\n//                 style={{ border: \"1px solid #D1D1D1\", borderRadius: \"5px\" }}\n//               >\n//                 <Grid item>\n//                   <Checkbox\n//                     name=\"salary\"\n//                     checked={searchOptions.sort.salary.status}\n//                     onChange={(event) =>\n//                       setSearchOptions({\n//                         ...searchOptions,\n//                         sort: {\n//                           ...searchOptions.sort,\n//                           salary: {\n//                             ...searchOptions.sort.salary,\n//                             status: event.target.checked,\n//                           },\n//                         },\n//                       })\n//                     }\n//                     id=\"salary\"\n//                   />\n//                 </Grid>\n//                 <Grid item>\n//                   <label for=\"salary\">\n//                     <Typography>Salary</Typography>\n//                   </label>\n//                 </Grid>\n//                 <Grid item>\n//                   <IconButton\n//                     disabled={!searchOptions.sort.salary.status}\n//                     onClick={() => {\n//                       setSearchOptions({\n//                         ...searchOptions,\n//                         sort: {\n//                           ...searchOptions.sort,\n//                           salary: {\n//                             ...searchOptions.sort.salary,\n//                             desc: !searchOptions.sort.salary.desc,\n//                           },\n//                         },\n//                       });\n//                     }}\n//                   >\n//                     {searchOptions.sort.salary.desc ? (\n//                       <ArrowDownwardIcon />\n//                     ) : (\n//                       <ArrowUpwardIcon />\n//                     )}\n//                   </IconButton>\n//                 </Grid>\n//               </Grid>\n//               <Grid\n//                 item\n//                 container\n//                 xs={4}\n//                 justify=\"space-around\"\n//                 alignItems=\"center\"\n//                 style={{ border: \"1px solid #D1D1D1\", borderRadius: \"5px\" }}\n//               >\n//                 <Grid item>\n//                   <Checkbox\n//                     name=\"duration\"\n//                     checked={searchOptions.sort.duration.status}\n//                     onChange={(event) =>\n//                       setSearchOptions({\n//                         ...searchOptions,\n//                         sort: {\n//                           ...searchOptions.sort,\n//                           duration: {\n//                             ...searchOptions.sort.duration,\n//                             status: event.target.checked,\n//                           },\n//                         },\n//                       })\n//                     }\n//                     id=\"duration\"\n//                   />\n//                 </Grid>\n//                 <Grid item>\n//                   <label for=\"duration\">\n//                     <Typography>Duration</Typography>\n//                   </label>\n//                 </Grid>\n//                 <Grid item>\n//                   <IconButton\n//                     disabled={!searchOptions.sort.duration.status}\n//                     onClick={() => {\n//                       setSearchOptions({\n//                         ...searchOptions,\n//                         sort: {\n//                           ...searchOptions.sort,\n//                           duration: {\n//                             ...searchOptions.sort.duration,\n//                             desc: !searchOptions.sort.duration.desc,\n//                           },\n//                         },\n//                       });\n//                     }}\n//                   >\n//                     {searchOptions.sort.duration.desc ? (\n//                       <ArrowDownwardIcon />\n//                     ) : (\n//                       <ArrowUpwardIcon />\n//                     )}\n//                   </IconButton>\n//                 </Grid>\n//               </Grid>\n//               <Grid\n//                 item\n//                 container\n//                 xs={4}\n//                 justify=\"space-around\"\n//                 alignItems=\"center\"\n//                 style={{ border: \"1px solid #D1D1D1\", borderRadius: \"5px\" }}\n//               >\n//                 <Grid item>\n//                   <Checkbox\n//                     name=\"rating\"\n//                     checked={searchOptions.sort.rating.status}\n//                     onChange={(event) =>\n//                       setSearchOptions({\n//                         ...searchOptions,\n//                         sort: {\n//                           ...searchOptions.sort,\n//                           rating: {\n//                             ...searchOptions.sort.rating,\n//                             status: event.target.checked,\n//                           },\n//                         },\n//                       })\n//                     }\n//                     id=\"rating\"\n//                   />\n//                 </Grid>\n//                 <Grid item>\n//                   <label for=\"rating\">\n//                     <Typography>Rating</Typography>\n//                   </label>\n//                 </Grid>\n//                 <Grid item>\n//                   <IconButton\n//                     disabled={!searchOptions.sort.rating.status}\n//                     onClick={() => {\n//                       setSearchOptions({\n//                         ...searchOptions,\n//                         sort: {\n//                           ...searchOptions.sort,\n//                           rating: {\n//                             ...searchOptions.sort.rating,\n//                             desc: !searchOptions.sort.rating.desc,\n//                           },\n//                         },\n//                       });\n//                     }}\n//                   >\n//                     {searchOptions.sort.rating.desc ? (\n//                       <ArrowDownwardIcon />\n//                     ) : (\n//                       <ArrowUpwardIcon />\n//                     )}\n//                   </IconButton>\n//                 </Grid>\n//               </Grid>\n//             </Grid>\n//           </Grid>\n\n//           <Grid item>\n//             <Button\n//               variant=\"contained\"\n//               color=\"primary\"\n//               style={{ padding: \"3px 3px\"}}\n//               onClick={() => getData()}\n//             >\n//               Apply\n//             </Button>\n//           </Grid>\n//         </Grid>\n//       </Paper>\n//     </Modal>\n//   );\n// };\n\nconst Home = (props) => {\n  const [jobs, setJobs] = useState([]);\n\n  const setPopup = useContext(SetPopupContext);\n  useEffect(() => {\n    getData();\n  }, []);\n\n  const getData = () => {\n    axios\n      .get(apiList.jobs, {\n        headers: {\n          authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n        },\n      })\n      .then((response) => {\n        console.log(response.data.res);\n        setJobs(response.data.res)\n      })\n      .catch((err) => {\n        console.log(err);\n        setPopup({\n          open: true,\n          severity: \"error\",\n          message: \"Error\",\n        });\n      });\n  };\n\n  return (\n    <>\n      <Grid\n        container\n        item\n        direction=\"column\"\n        alignItems=\"center\"\n        style={{ padding: \"30px\", minHeight: \"93vh\" }}\n      >\n        <Grid\n          item\n          container\n          direction=\"column\"\n          justify=\"center\"\n          alignItems=\"center\"\n        >\n          <Grid item xs>\n            <Typography variant=\"h2\">Jobs</Typography>\n          </Grid>\n        </Grid>\n\n        <Grid\n          container\n          item\n          xs\n          direction=\"column\"\n          alignItems=\"stretch\"\n          justify=\"center\"\n        >\n          {jobs.length > 0 ? (\n            jobs.map((job) => {\n              return <JobTile job={job} />;\n            })\n          ) : (\n            <Typography variant=\"h5\" style={{ textAlign: \"center\" }}>\n              No jobs found\n            </Typography>\n          )}\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport default Home;\n","E:\\work\\job-portal-main\\job-portal-main\\frontend\\src\\lib\\isAuth.js",[],"E:\\work\\job-portal-main\\job-portal-main\\frontend\\src\\lib\\apiList.js",[],"E:\\work\\job-portal-main\\job-portal-main\\frontend\\src\\lib\\PasswordInput.js",[],"E:\\work\\job-portal-main\\job-portal-main\\frontend\\src\\lib\\EmailInput.js",[],"E:\\work\\job-portal-main\\job-portal-main\\frontend\\src\\lib\\FileUploadInput.js",[],"E:\\work\\job-portal-main\\job-portal-main\\frontend\\src\\component\\admin\\Employers.js",["308","309","310","311","312","313","314","315","316","317","318","319","320","321","322","323"],"import { useState, useEffect, useContext } from \"react\";\r\nimport {\r\n  Button,\r\n  Chip,\r\n  Grid,\r\n  IconButton,\r\n  InputAdornment,\r\n  makeStyles,\r\n  Paper,\r\n  TextField,\r\n  Typography,\r\n  Modal,\r\n  Slider,\r\n  FormControlLabel,\r\n  FormGroup,\r\n  MenuItem,\r\n  Checkbox,\r\n} from \"@material-ui/core\";\r\nimport Rating from \"@material-ui/lab/Rating\";\r\nimport axios from \"axios\";\r\n\r\nimport { SetPopupContext } from \"../../App\";\r\n\r\nimport apiList from \"../../lib/apiList\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  body: {\r\n    height: \"inherit\",\r\n  },\r\n  statusBlock: {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    textTransform: \"uppercase\",\r\n  },\r\n  jobTileOuter: {\r\n    padding: \"30px\",\r\n    margin: \"20px 0\",\r\n    boxSizing: \"border-box\",\r\n    width: \"100%\",\r\n  },\r\n  popupDialog: {\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n}));\r\n\r\nconst EmployerTile = (props) => {\r\n  const classes = useStyles();\r\n  const { employer, getData } = props;\r\n  const setPopup = useContext(SetPopupContext);\r\n  useEffect(() => {\r\n    // getOrgName();\r\n  }, []);\r\n  const [open, setOpen] = useState(false);\r\n  const [organizationName, setOrganizationName] = useState(\"\");\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const updateStatus = (status) => {\r\n    const statusData = {\r\n      emp_id: employer.loginId,\r\n      setVerified: status\r\n    };\r\n    axios\r\n      .post(apiList.verfifyEmployer, statusData, {\r\n        headers: {\r\n          authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        setPopup({\r\n          open: true,\r\n          severity: \"success\",\r\n          message: response.data.msg,\r\n        });\r\n        getData();\r\n      })\r\n      .catch((err) => {\r\n        setPopup({\r\n          open: true,\r\n          severity: \"error\",\r\n          message: err.response.err,\r\n        });\r\n        console.log(err.response);\r\n      });\r\n  };\r\n\r\n  const colorSet = {\r\n    true: \"#09BC8A\",\r\n    false: \"#DC851F\"\r\n  };\r\n\r\n  const buttonSet = {\r\n    false: (\r\n      <>\r\n        <Grid item xs style={{\r\n          marginRight: \"2em\",\r\n          maxHeight: \"3em\",\r\n          maxWidth: \"12em\",\r\n          padding: \"0.4em\"\r\n        }}>\r\n          <Button\r\n            className={classes.statusBlock}\r\n            style={{\r\n              background: colorSet[\"false\"],\r\n              color: \"#ffffff\"\r\n            }}\r\n            onClick={() => updateStatus(true)}\r\n          >\r\n            Not Verified\r\n          </Button>\r\n        </Grid>\r\n      </>\r\n    ),\r\n    true: (\r\n      <>\r\n        <Grid item xs style={{\r\n          marginRight: \"2em\",\r\n          maxHeight: \"3em\",\r\n          maxWidth: \"12em\",\r\n          padding: \"0.4em\"\r\n        }}>\r\n          <Button\r\n            className={classes.statusBlock}\r\n            style={{\r\n              background: colorSet[\"true\"],\r\n              color: \"#ffffff\"\r\n            }}\r\n            onClick={() => updateStatus(false)}\r\n          >\r\n            Verified\r\n          </Button>\r\n        </Grid>\r\n      </>\r\n    )\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.jobTileOuter} elevation={3}>\r\n      <Grid container>\r\n        <Grid container item xs={9} spacing={1} direction=\"column\">\r\n          <Grid item>\r\n            <Typography variant=\"h5\">{employer.organizationName}</Typography>\r\n          </Grid>\r\n          <Grid item>Name: {employer.name}</Grid>\r\n          <Grid item container xs>\r\n            {buttonSet[employer.isVerified]}\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nconst Employers = (props) => {\r\n  const setPopup = useContext(SetPopupContext);\r\n  const [employers, setEmployers] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  const getData = () => {\r\n\r\n    axios\r\n      .get(apiList.employerDetails, {\r\n        headers: {\r\n          authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data.res);\r\n        setEmployers(response.data.res);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.res);\r\n        setPopup({\r\n          open: true,\r\n          severity: \"error\",\r\n          message: \"Error\",\r\n        });\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      item\r\n      direction=\"column\"\r\n      alignItems=\"center\"\r\n      style={{ padding: \"30px\", minHeight: \"93vh\" }}\r\n    >\r\n      <Grid item>\r\n        <Typography variant=\"h2\">Manage Employers</Typography>\r\n      </Grid>\r\n      <Grid\r\n        container\r\n        item\r\n        xs\r\n        direction=\"column\"\r\n        style={{ width: \"100%\" }}\r\n        alignItems=\"stretch\"\r\n        justify=\"center\"\r\n      >\r\n        {employers.length > 0 ? (\r\n          employers.map((obj) => (\r\n              <EmployerTile employer={obj} getData={getData}/>\r\n          ))\r\n        ) : (\r\n          <Typography variant=\"h5\" style={{ textAlign: \"center\" }}>\r\n            No Employers Found\r\n          </Typography>\r\n        )}\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Employers;\r\n","E:\\work\\job-portal-main\\job-portal-main\\frontend\\src\\component\\admin\\Candidates.js",["324","325","326","327","328","329","330","331","332","333","334","335","336","337"],"E:\\mtech\\computing lab\\job_portal\\front_end\\src\\index.js",[],"E:\\mtech\\computing lab\\job_portal\\front_end\\src\\App.js",["338"],"E:\\mtech\\computing lab\\job_portal\\front_end\\src\\reportWebVitals.js",[],"E:\\mtech\\computing lab\\job_portal\\front_end\\src\\component\\Navbar.js",[],"E:\\mtech\\computing lab\\job_portal\\front_end\\src\\component\\Home.js",["339","340","341","342","343","344","345","346","347","348","349","350","351","352","353","354","355","356"],"E:\\mtech\\computing lab\\job_portal\\front_end\\src\\component\\Login.js",["357"],"E:\\mtech\\computing lab\\job_portal\\front_end\\src\\component\\Welcome.js",[],"E:\\mtech\\computing lab\\job_portal\\front_end\\src\\component\\Logout.js",["358"],"E:\\mtech\\computing lab\\job_portal\\front_end\\src\\component\\Profile.js",["359","360","361","362","363","364","365","366","367","368","369","370","371","372","373","374"],"E:\\mtech\\computing lab\\job_portal\\front_end\\src\\component\\Applications.js",["375","376","377","378","379","380","381","382","383","384","385","386","387","388","389","390"],"E:\\mtech\\computing lab\\job_portal\\front_end\\src\\component\\Signup.js",["391","392","393","394","395","396","397","398","399"],"E:\\mtech\\computing lab\\job_portal\\front_end\\src\\component\\recruiter\\CreateJobs.js",["400","401","402","403","404","405","406"],"E:\\mtech\\computing lab\\job_portal\\front_end\\src\\component\\admin\\Candidates.js",["407","408","409","410","411","412","413","414","415","416","417","418","419","420"],"E:\\mtech\\computing lab\\job_portal\\front_end\\src\\component\\admin\\Employers.js",["421","422","423","424","425","426","427","428","429","430","431","432","433","434","435","436"],"E:\\mtech\\computing lab\\job_portal\\front_end\\src\\lib\\MessagePopup.js",["437"],"E:\\mtech\\computing lab\\job_portal\\front_end\\src\\component\\recruiter\\JobApplications.js",["438","439","440","441","442","443","444","445","446","447","448","449","450","451","452","453","454","455","456"],"E:\\mtech\\computing lab\\job_portal\\front_end\\src\\component\\recruiter\\Profile.js",["457","458","459"],"E:\\mtech\\computing lab\\job_portal\\front_end\\src\\lib\\isAuth.js",[],"E:\\mtech\\computing lab\\job_portal\\front_end\\src\\component\\recruiter\\MyJobs.js",["460","461","462","463","464","465","466","467","468","469","470","471","472"],"E:\\mtech\\computing lab\\job_portal\\front_end\\src\\lib\\EmailInput.js",[],"E:\\mtech\\computing lab\\job_portal\\front_end\\src\\lib\\apiList.js",[],"E:\\mtech\\computing lab\\job_portal\\front_end\\src\\lib\\FileUploadInput.js",[],"E:\\mtech\\computing lab\\job_portal\\front_end\\src\\lib\\PasswordInput.js",[],{"ruleId":"473","replacedBy":"474"},{"ruleId":"475","replacedBy":"476"},{"ruleId":"477","severity":1,"message":"478","line":19,"column":8,"nodeType":"479","messageId":"480","endLine":19,"endColumn":14},{"ruleId":"481","severity":1,"message":"482","line":18,"column":6,"nodeType":"483","endLine":18,"endColumn":8,"suggestions":"484"},{"ruleId":"477","severity":1,"message":"485","line":4,"column":3,"nodeType":"479","messageId":"480","endLine":4,"endColumn":12},{"ruleId":"477","severity":1,"message":"486","line":3,"column":3,"nodeType":"479","messageId":"480","endLine":3,"endColumn":9},{"ruleId":"477","severity":1,"message":"487","line":4,"column":3,"nodeType":"479","messageId":"480","endLine":4,"endColumn":7},{"ruleId":"477","severity":1,"message":"488","line":6,"column":3,"nodeType":"479","messageId":"480","endLine":6,"endColumn":13},{"ruleId":"477","severity":1,"message":"489","line":7,"column":3,"nodeType":"479","messageId":"480","endLine":7,"endColumn":17},{"ruleId":"477","severity":1,"message":"485","line":10,"column":3,"nodeType":"479","messageId":"480","endLine":10,"endColumn":12},{"ruleId":"477","severity":1,"message":"490","line":12,"column":3,"nodeType":"479","messageId":"480","endLine":12,"endColumn":8},{"ruleId":"477","severity":1,"message":"491","line":13,"column":3,"nodeType":"479","messageId":"480","endLine":13,"endColumn":9},{"ruleId":"477","severity":1,"message":"492","line":14,"column":3,"nodeType":"479","messageId":"480","endLine":14,"endColumn":19},{"ruleId":"477","severity":1,"message":"493","line":15,"column":3,"nodeType":"479","messageId":"480","endLine":15,"endColumn":12},{"ruleId":"477","severity":1,"message":"494","line":16,"column":3,"nodeType":"479","messageId":"480","endLine":16,"endColumn":11},{"ruleId":"477","severity":1,"message":"495","line":17,"column":3,"nodeType":"479","messageId":"480","endLine":17,"endColumn":11},{"ruleId":"477","severity":1,"message":"496","line":19,"column":8,"nodeType":"479","messageId":"480","endLine":19,"endColumn":14},{"ruleId":"481","severity":1,"message":"497","line":58,"column":6,"nodeType":"483","endLine":58,"endColumn":8,"suggestions":"498"},{"ruleId":"477","severity":1,"message":"499","line":59,"column":10,"nodeType":"479","messageId":"480","endLine":59,"endColumn":14},{"ruleId":"477","severity":1,"message":"500","line":83,"column":9,"nodeType":"479","messageId":"480","endLine":83,"endColumn":20},{"ruleId":"481","severity":1,"message":"501","line":167,"column":6,"nodeType":"483","endLine":167,"endColumn":8,"suggestions":"502"},{"ruleId":"477","severity":1,"message":"490","line":6,"column":3,"nodeType":"479","messageId":"480","endLine":6,"endColumn":8},{"ruleId":"477","severity":1,"message":"494","line":10,"column":3,"nodeType":"479","messageId":"480","endLine":10,"endColumn":11},{"ruleId":"477","severity":1,"message":"503","line":13,"column":8,"nodeType":"479","messageId":"480","endLine":13,"endColumn":17},{"ruleId":"477","severity":1,"message":"504","line":33,"column":9,"nodeType":"479","messageId":"480","endLine":33,"endColumn":16},{"ruleId":"481","severity":1,"message":"501","line":37,"column":6,"nodeType":"483","endLine":37,"endColumn":8,"suggestions":"505"},{"ruleId":"477","severity":1,"message":"506","line":38,"column":10,"nodeType":"479","messageId":"480","endLine":38,"endColumn":15},{"ruleId":"477","severity":1,"message":"507","line":38,"column":17,"nodeType":"479","messageId":"480","endLine":38,"endColumn":25},{"ruleId":"477","severity":1,"message":"508","line":10,"column":3,"nodeType":"479","messageId":"480","endLine":10,"endColumn":8},{"ruleId":"477","severity":1,"message":"509","line":15,"column":8,"nodeType":"479","messageId":"480","endLine":15,"endColumn":23},{"ruleId":"477","severity":1,"message":"510","line":16,"column":8,"nodeType":"479","messageId":"480","endLine":16,"endColumn":16},{"ruleId":"477","severity":1,"message":"511","line":22,"column":8,"nodeType":"479","messageId":"480","endLine":22,"endColumn":23},{"ruleId":"477","severity":1,"message":"512","line":43,"column":11,"nodeType":"479","messageId":"480","endLine":43,"endColumn":17},{"ruleId":"477","severity":1,"message":"513","line":43,"column":19,"nodeType":"479","messageId":"480","endLine":43,"endColumn":28},{"ruleId":"477","severity":1,"message":"514","line":118,"column":10,"nodeType":"479","messageId":"480","endLine":118,"endColumn":26},{"ruleId":"477","severity":1,"message":"515","line":118,"column":28,"nodeType":"479","messageId":"480","endLine":118,"endColumn":47},{"ruleId":"477","severity":1,"message":"516","line":120,"column":21,"nodeType":"479","messageId":"480","endLine":120,"endColumn":33},{"ruleId":"477","severity":1,"message":"490","line":6,"column":3,"nodeType":"479","messageId":"480","endLine":6,"endColumn":8},{"ruleId":"477","severity":1,"message":"511","line":13,"column":8,"nodeType":"479","messageId":"480","endLine":13,"endColumn":23},{"ruleId":"477","severity":1,"message":"509","line":14,"column":8,"nodeType":"479","messageId":"480","endLine":14,"endColumn":23},{"ruleId":"477","severity":1,"message":"510","line":15,"column":8,"nodeType":"479","messageId":"480","endLine":15,"endColumn":16},{"ruleId":"477","severity":1,"message":"517","line":16,"column":8,"nodeType":"479","messageId":"480","endLine":16,"endColumn":18},{"ruleId":"477","severity":1,"message":"512","line":40,"column":11,"nodeType":"479","messageId":"480","endLine":40,"endColumn":17},{"ruleId":"477","severity":1,"message":"513","line":40,"column":19,"nodeType":"479","messageId":"480","endLine":40,"endColumn":28},{"ruleId":"477","severity":1,"message":"518","line":81,"column":10,"nodeType":"479","messageId":"480","endLine":81,"endColumn":18},{"ruleId":"477","severity":1,"message":"519","line":81,"column":20,"nodeType":"479","messageId":"480","endLine":81,"endColumn":31},{"ruleId":"477","severity":1,"message":"520","line":82,"column":10,"nodeType":"479","messageId":"480","endLine":82,"endColumn":14},{"ruleId":"477","severity":1,"message":"521","line":82,"column":16,"nodeType":"479","messageId":"480","endLine":82,"endColumn":23},{"ruleId":"477","severity":1,"message":"499","line":83,"column":10,"nodeType":"479","messageId":"480","endLine":83,"endColumn":14},{"ruleId":"477","severity":1,"message":"522","line":84,"column":10,"nodeType":"479","messageId":"480","endLine":84,"endColumn":17},{"ruleId":"477","severity":1,"message":"523","line":84,"column":19,"nodeType":"479","messageId":"480","endLine":84,"endColumn":29},{"ruleId":"477","severity":1,"message":"516","line":107,"column":21,"nodeType":"479","messageId":"480","endLine":107,"endColumn":33},{"ruleId":"481","severity":1,"message":"501","line":118,"column":6,"nodeType":"483","endLine":118,"endColumn":8,"suggestions":"524"},{"ruleId":"477","severity":1,"message":"487","line":4,"column":3,"nodeType":"479","messageId":"480","endLine":4,"endColumn":7},{"ruleId":"477","severity":1,"message":"489","line":7,"column":3,"nodeType":"479","messageId":"480","endLine":7,"endColumn":17},{"ruleId":"477","severity":1,"message":"493","line":15,"column":3,"nodeType":"479","messageId":"480","endLine":15,"endColumn":12},{"ruleId":"477","severity":1,"message":"496","line":20,"column":8,"nodeType":"479","messageId":"480","endLine":20,"endColumn":14},{"ruleId":"477","severity":1,"message":"525","line":21,"column":8,"nodeType":"479","messageId":"480","endLine":21,"endColumn":18},{"ruleId":"477","severity":1,"message":"526","line":23,"column":8,"nodeType":"479","messageId":"480","endLine":23,"endColumn":18},{"ruleId":"477","severity":1,"message":"527","line":24,"column":8,"nodeType":"479","messageId":"480","endLine":24,"endColumn":22},{"ruleId":"477","severity":1,"message":"499","line":68,"column":10,"nodeType":"479","messageId":"480","endLine":68,"endColumn":14},{"ruleId":"477","severity":1,"message":"528","line":74,"column":9,"nodeType":"479","messageId":"480","endLine":74,"endColumn":20},{"ruleId":"477","severity":1,"message":"529","line":93,"column":9,"nodeType":"479","messageId":"480","endLine":93,"endColumn":21},{"ruleId":"477","severity":1,"message":"530","line":232,"column":7,"nodeType":"479","messageId":"480","endLine":232,"endColumn":18},{"ruleId":"477","severity":1,"message":"506","line":565,"column":10,"nodeType":"479","messageId":"480","endLine":565,"endColumn":15},{"ruleId":"481","severity":1,"message":"501","line":570,"column":6,"nodeType":"483","endLine":570,"endColumn":8,"suggestions":"531"},{"ruleId":"477","severity":1,"message":"488","line":6,"column":3,"nodeType":"479","messageId":"480","endLine":6,"endColumn":13},{"ruleId":"477","severity":1,"message":"489","line":7,"column":3,"nodeType":"479","messageId":"480","endLine":7,"endColumn":17},{"ruleId":"477","severity":1,"message":"485","line":10,"column":3,"nodeType":"479","messageId":"480","endLine":10,"endColumn":12},{"ruleId":"477","severity":1,"message":"491","line":13,"column":3,"nodeType":"479","messageId":"480","endLine":13,"endColumn":9},{"ruleId":"477","severity":1,"message":"492","line":14,"column":3,"nodeType":"479","messageId":"480","endLine":14,"endColumn":19},{"ruleId":"477","severity":1,"message":"493","line":15,"column":3,"nodeType":"479","messageId":"480","endLine":15,"endColumn":12},{"ruleId":"477","severity":1,"message":"494","line":16,"column":3,"nodeType":"479","messageId":"480","endLine":16,"endColumn":11},{"ruleId":"477","severity":1,"message":"495","line":17,"column":3,"nodeType":"479","messageId":"480","endLine":17,"endColumn":11},{"ruleId":"477","severity":1,"message":"532","line":18,"column":3,"nodeType":"479","messageId":"480","endLine":18,"endColumn":9},{"ruleId":"477","severity":1,"message":"496","line":21,"column":8,"nodeType":"479","messageId":"480","endLine":21,"endColumn":14},{"ruleId":"477","severity":1,"message":"527","line":23,"column":8,"nodeType":"479","messageId":"480","endLine":23,"endColumn":22},{"ruleId":"477","severity":1,"message":"533","line":24,"column":8,"nodeType":"479","messageId":"480","endLine":24,"endColumn":23},{"ruleId":"477","severity":1,"message":"534","line":25,"column":8,"nodeType":"479","messageId":"480","endLine":25,"endColumn":25},{"ruleId":"477","severity":1,"message":"535","line":29,"column":19,"nodeType":"479","messageId":"480","endLine":29,"endColumn":25},{"ruleId":"477","severity":1,"message":"536","line":357,"column":10,"nodeType":"479","messageId":"480","endLine":357,"endColumn":20},{"ruleId":"477","severity":1,"message":"537","line":357,"column":22,"nodeType":"479","messageId":"480","endLine":357,"endColumn":35},{"ruleId":"477","severity":1,"message":"538","line":358,"column":10,"nodeType":"479","messageId":"480","endLine":358,"endColumn":23},{"ruleId":"477","severity":1,"message":"539","line":358,"column":25,"nodeType":"479","messageId":"480","endLine":358,"endColumn":41},{"ruleId":"481","severity":1,"message":"501","line":382,"column":6,"nodeType":"483","endLine":382,"endColumn":8,"suggestions":"540"},{"ruleId":"477","severity":1,"message":"490","line":6,"column":3,"nodeType":"479","messageId":"480","endLine":6,"endColumn":8},{"ruleId":"481","severity":1,"message":"501","line":53,"column":6,"nodeType":"483","endLine":53,"endColumn":8,"suggestions":"541"},{"ruleId":"542","severity":1,"message":"543","line":164,"column":34,"nodeType":"544","messageId":"545","endLine":164,"endColumn":36},{"ruleId":"477","severity":1,"message":"546","line":1,"column":20,"nodeType":"479","messageId":"480","endLine":1,"endColumn":25},{"ruleId":"477","severity":1,"message":"487","line":4,"column":3,"nodeType":"479","messageId":"480","endLine":4,"endColumn":7},{"ruleId":"477","severity":1,"message":"488","line":6,"column":3,"nodeType":"479","messageId":"480","endLine":6,"endColumn":13},{"ruleId":"477","severity":1,"message":"489","line":7,"column":3,"nodeType":"479","messageId":"480","endLine":7,"endColumn":17},{"ruleId":"477","severity":1,"message":"485","line":10,"column":3,"nodeType":"479","messageId":"480","endLine":10,"endColumn":12},{"ruleId":"477","severity":1,"message":"491","line":13,"column":3,"nodeType":"479","messageId":"480","endLine":13,"endColumn":9},{"ruleId":"477","severity":1,"message":"492","line":14,"column":3,"nodeType":"479","messageId":"480","endLine":14,"endColumn":19},{"ruleId":"477","severity":1,"message":"493","line":15,"column":3,"nodeType":"479","messageId":"480","endLine":15,"endColumn":12},{"ruleId":"477","severity":1,"message":"494","line":16,"column":3,"nodeType":"479","messageId":"480","endLine":16,"endColumn":11},{"ruleId":"477","severity":1,"message":"495","line":17,"column":3,"nodeType":"479","messageId":"480","endLine":17,"endColumn":11},{"ruleId":"477","severity":1,"message":"496","line":19,"column":8,"nodeType":"479","messageId":"480","endLine":19,"endColumn":14},{"ruleId":"477","severity":1,"message":"525","line":20,"column":8,"nodeType":"479","messageId":"480","endLine":20,"endColumn":18},{"ruleId":"477","severity":1,"message":"526","line":22,"column":8,"nodeType":"479","messageId":"480","endLine":22,"endColumn":18},{"ruleId":"477","severity":1,"message":"527","line":23,"column":8,"nodeType":"479","messageId":"480","endLine":23,"endColumn":22},{"ruleId":"477","severity":1,"message":"533","line":24,"column":8,"nodeType":"479","messageId":"480","endLine":24,"endColumn":23},{"ruleId":"477","severity":1,"message":"534","line":25,"column":8,"nodeType":"479","messageId":"480","endLine":25,"endColumn":25},{"ruleId":"481","severity":1,"message":"547","line":65,"column":6,"nodeType":"483","endLine":65,"endColumn":8,"suggestions":"548"},{"ruleId":"477","severity":1,"message":"549","line":70,"column":10,"nodeType":"479","messageId":"480","endLine":70,"endColumn":13},{"ruleId":"481","severity":1,"message":"501","line":557,"column":6,"nodeType":"483","endLine":557,"endColumn":8,"suggestions":"550"},{"ruleId":"477","severity":1,"message":"487","line":4,"column":3,"nodeType":"479","messageId":"480","endLine":4,"endColumn":7},{"ruleId":"477","severity":1,"message":"488","line":6,"column":3,"nodeType":"479","messageId":"480","endLine":6,"endColumn":13},{"ruleId":"477","severity":1,"message":"489","line":7,"column":3,"nodeType":"479","messageId":"480","endLine":7,"endColumn":17},{"ruleId":"477","severity":1,"message":"485","line":10,"column":3,"nodeType":"479","messageId":"480","endLine":10,"endColumn":12},{"ruleId":"477","severity":1,"message":"490","line":12,"column":3,"nodeType":"479","messageId":"480","endLine":12,"endColumn":8},{"ruleId":"477","severity":1,"message":"491","line":13,"column":3,"nodeType":"479","messageId":"480","endLine":13,"endColumn":9},{"ruleId":"477","severity":1,"message":"492","line":14,"column":3,"nodeType":"479","messageId":"480","endLine":14,"endColumn":19},{"ruleId":"477","severity":1,"message":"493","line":15,"column":3,"nodeType":"479","messageId":"480","endLine":15,"endColumn":12},{"ruleId":"477","severity":1,"message":"494","line":16,"column":3,"nodeType":"479","messageId":"480","endLine":16,"endColumn":11},{"ruleId":"477","severity":1,"message":"495","line":17,"column":3,"nodeType":"479","messageId":"480","endLine":17,"endColumn":11},{"ruleId":"477","severity":1,"message":"496","line":19,"column":8,"nodeType":"479","messageId":"480","endLine":19,"endColumn":14},{"ruleId":"477","severity":1,"message":"499","line":59,"column":10,"nodeType":"479","messageId":"480","endLine":59,"endColumn":14},{"ruleId":"477","severity":1,"message":"514","line":60,"column":10,"nodeType":"479","messageId":"480","endLine":60,"endColumn":26},{"ruleId":"477","severity":1,"message":"515","line":60,"column":28,"nodeType":"479","messageId":"480","endLine":60,"endColumn":47},{"ruleId":"477","severity":1,"message":"500","line":62,"column":9,"nodeType":"479","messageId":"480","endLine":62,"endColumn":20},{"ruleId":"481","severity":1,"message":"501","line":168,"column":6,"nodeType":"483","endLine":168,"endColumn":8,"suggestions":"551"},{"ruleId":"477","severity":1,"message":"487","line":4,"column":3,"nodeType":"479","messageId":"480","endLine":4,"endColumn":7},{"ruleId":"477","severity":1,"message":"488","line":6,"column":3,"nodeType":"479","messageId":"480","endLine":6,"endColumn":13},{"ruleId":"477","severity":1,"message":"489","line":7,"column":3,"nodeType":"479","messageId":"480","endLine":7,"endColumn":17},{"ruleId":"477","severity":1,"message":"485","line":10,"column":3,"nodeType":"479","messageId":"480","endLine":10,"endColumn":12},{"ruleId":"477","severity":1,"message":"490","line":12,"column":3,"nodeType":"479","messageId":"480","endLine":12,"endColumn":8},{"ruleId":"477","severity":1,"message":"491","line":13,"column":3,"nodeType":"479","messageId":"480","endLine":13,"endColumn":9},{"ruleId":"477","severity":1,"message":"492","line":14,"column":3,"nodeType":"479","messageId":"480","endLine":14,"endColumn":19},{"ruleId":"477","severity":1,"message":"493","line":15,"column":3,"nodeType":"479","messageId":"480","endLine":15,"endColumn":12},{"ruleId":"477","severity":1,"message":"494","line":16,"column":3,"nodeType":"479","messageId":"480","endLine":16,"endColumn":11},{"ruleId":"477","severity":1,"message":"495","line":17,"column":3,"nodeType":"479","messageId":"480","endLine":17,"endColumn":11},{"ruleId":"477","severity":1,"message":"496","line":19,"column":8,"nodeType":"479","messageId":"480","endLine":19,"endColumn":14},{"ruleId":"477","severity":1,"message":"499","line":59,"column":10,"nodeType":"479","messageId":"480","endLine":59,"endColumn":14},{"ruleId":"477","severity":1,"message":"500","line":62,"column":9,"nodeType":"479","messageId":"480","endLine":62,"endColumn":20},{"ruleId":"481","severity":1,"message":"501","line":165,"column":6,"nodeType":"483","endLine":165,"endColumn":8,"suggestions":"552"},{"ruleId":"477","severity":1,"message":"478","line":19,"column":8,"nodeType":"479","messageId":"480","endLine":19,"endColumn":14},{"ruleId":"477","severity":1,"message":"487","line":4,"column":3,"nodeType":"479","messageId":"480","endLine":4,"endColumn":7},{"ruleId":"477","severity":1,"message":"488","line":6,"column":3,"nodeType":"479","messageId":"480","endLine":6,"endColumn":13},{"ruleId":"477","severity":1,"message":"489","line":7,"column":3,"nodeType":"479","messageId":"480","endLine":7,"endColumn":17},{"ruleId":"477","severity":1,"message":"485","line":10,"column":3,"nodeType":"479","messageId":"480","endLine":10,"endColumn":12},{"ruleId":"477","severity":1,"message":"491","line":13,"column":3,"nodeType":"479","messageId":"480","endLine":13,"endColumn":9},{"ruleId":"477","severity":1,"message":"492","line":14,"column":3,"nodeType":"479","messageId":"480","endLine":14,"endColumn":19},{"ruleId":"477","severity":1,"message":"493","line":15,"column":3,"nodeType":"479","messageId":"480","endLine":15,"endColumn":12},{"ruleId":"477","severity":1,"message":"494","line":16,"column":3,"nodeType":"479","messageId":"480","endLine":16,"endColumn":11},{"ruleId":"477","severity":1,"message":"495","line":17,"column":3,"nodeType":"479","messageId":"480","endLine":17,"endColumn":11},{"ruleId":"477","severity":1,"message":"496","line":19,"column":8,"nodeType":"479","messageId":"480","endLine":19,"endColumn":14},{"ruleId":"477","severity":1,"message":"525","line":20,"column":8,"nodeType":"479","messageId":"480","endLine":20,"endColumn":18},{"ruleId":"477","severity":1,"message":"526","line":22,"column":8,"nodeType":"479","messageId":"480","endLine":22,"endColumn":18},{"ruleId":"477","severity":1,"message":"527","line":23,"column":8,"nodeType":"479","messageId":"480","endLine":23,"endColumn":22},{"ruleId":"477","severity":1,"message":"533","line":24,"column":8,"nodeType":"479","messageId":"480","endLine":24,"endColumn":23},{"ruleId":"477","severity":1,"message":"534","line":25,"column":8,"nodeType":"479","messageId":"480","endLine":25,"endColumn":25},{"ruleId":"481","severity":1,"message":"547","line":65,"column":6,"nodeType":"483","endLine":65,"endColumn":8,"suggestions":"553"},{"ruleId":"477","severity":1,"message":"549","line":70,"column":10,"nodeType":"479","messageId":"480","endLine":70,"endColumn":13},{"ruleId":"481","severity":1,"message":"501","line":557,"column":6,"nodeType":"483","endLine":557,"endColumn":8,"suggestions":"554"},{"ruleId":"477","severity":1,"message":"485","line":4,"column":3,"nodeType":"479","messageId":"480","endLine":4,"endColumn":12},{"ruleId":"481","severity":1,"message":"482","line":18,"column":6,"nodeType":"483","endLine":18,"endColumn":8,"suggestions":"555"},{"ruleId":"477","severity":1,"message":"490","line":6,"column":3,"nodeType":"479","messageId":"480","endLine":6,"endColumn":8},{"ruleId":"477","severity":1,"message":"511","line":13,"column":8,"nodeType":"479","messageId":"480","endLine":13,"endColumn":23},{"ruleId":"477","severity":1,"message":"509","line":14,"column":8,"nodeType":"479","messageId":"480","endLine":14,"endColumn":23},{"ruleId":"477","severity":1,"message":"510","line":15,"column":8,"nodeType":"479","messageId":"480","endLine":15,"endColumn":16},{"ruleId":"477","severity":1,"message":"517","line":16,"column":8,"nodeType":"479","messageId":"480","endLine":16,"endColumn":18},{"ruleId":"477","severity":1,"message":"512","line":40,"column":11,"nodeType":"479","messageId":"480","endLine":40,"endColumn":17},{"ruleId":"477","severity":1,"message":"513","line":40,"column":19,"nodeType":"479","messageId":"480","endLine":40,"endColumn":28},{"ruleId":"477","severity":1,"message":"518","line":81,"column":10,"nodeType":"479","messageId":"480","endLine":81,"endColumn":18},{"ruleId":"477","severity":1,"message":"519","line":81,"column":20,"nodeType":"479","messageId":"480","endLine":81,"endColumn":31},{"ruleId":"477","severity":1,"message":"520","line":82,"column":10,"nodeType":"479","messageId":"480","endLine":82,"endColumn":14},{"ruleId":"477","severity":1,"message":"521","line":82,"column":16,"nodeType":"479","messageId":"480","endLine":82,"endColumn":23},{"ruleId":"477","severity":1,"message":"499","line":83,"column":10,"nodeType":"479","messageId":"480","endLine":83,"endColumn":14},{"ruleId":"477","severity":1,"message":"522","line":84,"column":10,"nodeType":"479","messageId":"480","endLine":84,"endColumn":17},{"ruleId":"477","severity":1,"message":"523","line":84,"column":19,"nodeType":"479","messageId":"480","endLine":84,"endColumn":29},{"ruleId":"477","severity":1,"message":"516","line":107,"column":21,"nodeType":"479","messageId":"480","endLine":107,"endColumn":33},{"ruleId":"481","severity":1,"message":"501","line":118,"column":6,"nodeType":"483","endLine":118,"endColumn":8,"suggestions":"556"},{"ruleId":"477","severity":1,"message":"486","line":3,"column":3,"nodeType":"479","messageId":"480","endLine":3,"endColumn":9},{"ruleId":"477","severity":1,"message":"487","line":4,"column":3,"nodeType":"479","messageId":"480","endLine":4,"endColumn":7},{"ruleId":"477","severity":1,"message":"488","line":6,"column":3,"nodeType":"479","messageId":"480","endLine":6,"endColumn":13},{"ruleId":"477","severity":1,"message":"489","line":7,"column":3,"nodeType":"479","messageId":"480","endLine":7,"endColumn":17},{"ruleId":"477","severity":1,"message":"485","line":10,"column":3,"nodeType":"479","messageId":"480","endLine":10,"endColumn":12},{"ruleId":"477","severity":1,"message":"490","line":12,"column":3,"nodeType":"479","messageId":"480","endLine":12,"endColumn":8},{"ruleId":"477","severity":1,"message":"491","line":13,"column":3,"nodeType":"479","messageId":"480","endLine":13,"endColumn":9},{"ruleId":"477","severity":1,"message":"492","line":14,"column":3,"nodeType":"479","messageId":"480","endLine":14,"endColumn":19},{"ruleId":"477","severity":1,"message":"493","line":15,"column":3,"nodeType":"479","messageId":"480","endLine":15,"endColumn":12},{"ruleId":"477","severity":1,"message":"494","line":16,"column":3,"nodeType":"479","messageId":"480","endLine":16,"endColumn":11},{"ruleId":"477","severity":1,"message":"495","line":17,"column":3,"nodeType":"479","messageId":"480","endLine":17,"endColumn":11},{"ruleId":"477","severity":1,"message":"496","line":19,"column":8,"nodeType":"479","messageId":"480","endLine":19,"endColumn":14},{"ruleId":"481","severity":1,"message":"497","line":58,"column":6,"nodeType":"483","endLine":58,"endColumn":8,"suggestions":"557"},{"ruleId":"477","severity":1,"message":"499","line":59,"column":10,"nodeType":"479","messageId":"480","endLine":59,"endColumn":14},{"ruleId":"477","severity":1,"message":"500","line":83,"column":9,"nodeType":"479","messageId":"480","endLine":83,"endColumn":20},{"ruleId":"481","severity":1,"message":"501","line":167,"column":6,"nodeType":"483","endLine":167,"endColumn":8,"suggestions":"558"},{"ruleId":"477","severity":1,"message":"508","line":10,"column":3,"nodeType":"479","messageId":"480","endLine":10,"endColumn":8},{"ruleId":"477","severity":1,"message":"509","line":15,"column":8,"nodeType":"479","messageId":"480","endLine":15,"endColumn":23},{"ruleId":"477","severity":1,"message":"510","line":16,"column":8,"nodeType":"479","messageId":"480","endLine":16,"endColumn":16},{"ruleId":"477","severity":1,"message":"511","line":22,"column":8,"nodeType":"479","messageId":"480","endLine":22,"endColumn":23},{"ruleId":"477","severity":1,"message":"512","line":43,"column":11,"nodeType":"479","messageId":"480","endLine":43,"endColumn":17},{"ruleId":"477","severity":1,"message":"513","line":43,"column":19,"nodeType":"479","messageId":"480","endLine":43,"endColumn":28},{"ruleId":"477","severity":1,"message":"514","line":118,"column":10,"nodeType":"479","messageId":"480","endLine":118,"endColumn":26},{"ruleId":"477","severity":1,"message":"515","line":118,"column":28,"nodeType":"479","messageId":"480","endLine":118,"endColumn":47},{"ruleId":"477","severity":1,"message":"516","line":120,"column":21,"nodeType":"479","messageId":"480","endLine":120,"endColumn":33},{"ruleId":"477","severity":1,"message":"490","line":6,"column":3,"nodeType":"479","messageId":"480","endLine":6,"endColumn":8},{"ruleId":"477","severity":1,"message":"494","line":10,"column":3,"nodeType":"479","messageId":"480","endLine":10,"endColumn":11},{"ruleId":"477","severity":1,"message":"503","line":13,"column":8,"nodeType":"479","messageId":"480","endLine":13,"endColumn":17},{"ruleId":"477","severity":1,"message":"504","line":33,"column":9,"nodeType":"479","messageId":"480","endLine":33,"endColumn":16},{"ruleId":"481","severity":1,"message":"501","line":37,"column":6,"nodeType":"483","endLine":37,"endColumn":8,"suggestions":"559"},{"ruleId":"477","severity":1,"message":"506","line":38,"column":10,"nodeType":"479","messageId":"480","endLine":38,"endColumn":15},{"ruleId":"477","severity":1,"message":"507","line":38,"column":17,"nodeType":"479","messageId":"480","endLine":38,"endColumn":25},{"ruleId":"477","severity":1,"message":"487","line":4,"column":3,"nodeType":"479","messageId":"480","endLine":4,"endColumn":7},{"ruleId":"477","severity":1,"message":"488","line":6,"column":3,"nodeType":"479","messageId":"480","endLine":6,"endColumn":13},{"ruleId":"477","severity":1,"message":"489","line":7,"column":3,"nodeType":"479","messageId":"480","endLine":7,"endColumn":17},{"ruleId":"477","severity":1,"message":"485","line":10,"column":3,"nodeType":"479","messageId":"480","endLine":10,"endColumn":12},{"ruleId":"477","severity":1,"message":"490","line":12,"column":3,"nodeType":"479","messageId":"480","endLine":12,"endColumn":8},{"ruleId":"477","severity":1,"message":"491","line":13,"column":3,"nodeType":"479","messageId":"480","endLine":13,"endColumn":9},{"ruleId":"477","severity":1,"message":"492","line":14,"column":3,"nodeType":"479","messageId":"480","endLine":14,"endColumn":19},{"ruleId":"477","severity":1,"message":"493","line":15,"column":3,"nodeType":"479","messageId":"480","endLine":15,"endColumn":12},{"ruleId":"477","severity":1,"message":"494","line":16,"column":3,"nodeType":"479","messageId":"480","endLine":16,"endColumn":11},{"ruleId":"477","severity":1,"message":"495","line":17,"column":3,"nodeType":"479","messageId":"480","endLine":17,"endColumn":11},{"ruleId":"477","severity":1,"message":"496","line":19,"column":8,"nodeType":"479","messageId":"480","endLine":19,"endColumn":14},{"ruleId":"477","severity":1,"message":"499","line":59,"column":10,"nodeType":"479","messageId":"480","endLine":59,"endColumn":14},{"ruleId":"477","severity":1,"message":"500","line":62,"column":9,"nodeType":"479","messageId":"480","endLine":62,"endColumn":20},{"ruleId":"481","severity":1,"message":"501","line":165,"column":6,"nodeType":"483","endLine":165,"endColumn":8,"suggestions":"560"},{"ruleId":"477","severity":1,"message":"487","line":4,"column":3,"nodeType":"479","messageId":"480","endLine":4,"endColumn":7},{"ruleId":"477","severity":1,"message":"488","line":6,"column":3,"nodeType":"479","messageId":"480","endLine":6,"endColumn":13},{"ruleId":"477","severity":1,"message":"489","line":7,"column":3,"nodeType":"479","messageId":"480","endLine":7,"endColumn":17},{"ruleId":"477","severity":1,"message":"485","line":10,"column":3,"nodeType":"479","messageId":"480","endLine":10,"endColumn":12},{"ruleId":"477","severity":1,"message":"490","line":12,"column":3,"nodeType":"479","messageId":"480","endLine":12,"endColumn":8},{"ruleId":"477","severity":1,"message":"491","line":13,"column":3,"nodeType":"479","messageId":"480","endLine":13,"endColumn":9},{"ruleId":"477","severity":1,"message":"492","line":14,"column":3,"nodeType":"479","messageId":"480","endLine":14,"endColumn":19},{"ruleId":"477","severity":1,"message":"493","line":15,"column":3,"nodeType":"479","messageId":"480","endLine":15,"endColumn":12},{"ruleId":"477","severity":1,"message":"494","line":16,"column":3,"nodeType":"479","messageId":"480","endLine":16,"endColumn":11},{"ruleId":"477","severity":1,"message":"495","line":17,"column":3,"nodeType":"479","messageId":"480","endLine":17,"endColumn":11},{"ruleId":"477","severity":1,"message":"496","line":19,"column":8,"nodeType":"479","messageId":"480","endLine":19,"endColumn":14},{"ruleId":"477","severity":1,"message":"499","line":59,"column":10,"nodeType":"479","messageId":"480","endLine":59,"endColumn":14},{"ruleId":"477","severity":1,"message":"514","line":60,"column":10,"nodeType":"479","messageId":"480","endLine":60,"endColumn":26},{"ruleId":"477","severity":1,"message":"515","line":60,"column":28,"nodeType":"479","messageId":"480","endLine":60,"endColumn":47},{"ruleId":"477","severity":1,"message":"500","line":62,"column":9,"nodeType":"479","messageId":"480","endLine":62,"endColumn":20},{"ruleId":"481","severity":1,"message":"501","line":168,"column":6,"nodeType":"483","endLine":168,"endColumn":8,"suggestions":"561"},{"ruleId":"477","severity":1,"message":"546","line":1,"column":20,"nodeType":"479","messageId":"480","endLine":1,"endColumn":25},{"ruleId":"477","severity":1,"message":"488","line":6,"column":3,"nodeType":"479","messageId":"480","endLine":6,"endColumn":13},{"ruleId":"477","severity":1,"message":"489","line":7,"column":3,"nodeType":"479","messageId":"480","endLine":7,"endColumn":17},{"ruleId":"477","severity":1,"message":"485","line":10,"column":3,"nodeType":"479","messageId":"480","endLine":10,"endColumn":12},{"ruleId":"477","severity":1,"message":"491","line":13,"column":3,"nodeType":"479","messageId":"480","endLine":13,"endColumn":9},{"ruleId":"477","severity":1,"message":"492","line":14,"column":3,"nodeType":"479","messageId":"480","endLine":14,"endColumn":19},{"ruleId":"477","severity":1,"message":"493","line":15,"column":3,"nodeType":"479","messageId":"480","endLine":15,"endColumn":12},{"ruleId":"477","severity":1,"message":"494","line":16,"column":3,"nodeType":"479","messageId":"480","endLine":16,"endColumn":11},{"ruleId":"477","severity":1,"message":"495","line":17,"column":3,"nodeType":"479","messageId":"480","endLine":17,"endColumn":11},{"ruleId":"477","severity":1,"message":"532","line":18,"column":3,"nodeType":"479","messageId":"480","endLine":18,"endColumn":9},{"ruleId":"477","severity":1,"message":"496","line":21,"column":8,"nodeType":"479","messageId":"480","endLine":21,"endColumn":14},{"ruleId":"477","severity":1,"message":"527","line":23,"column":8,"nodeType":"479","messageId":"480","endLine":23,"endColumn":22},{"ruleId":"477","severity":1,"message":"533","line":24,"column":8,"nodeType":"479","messageId":"480","endLine":24,"endColumn":23},{"ruleId":"477","severity":1,"message":"534","line":25,"column":8,"nodeType":"479","messageId":"480","endLine":25,"endColumn":25},{"ruleId":"477","severity":1,"message":"535","line":29,"column":19,"nodeType":"479","messageId":"480","endLine":29,"endColumn":25},{"ruleId":"477","severity":1,"message":"536","line":357,"column":10,"nodeType":"479","messageId":"480","endLine":357,"endColumn":20},{"ruleId":"477","severity":1,"message":"537","line":357,"column":22,"nodeType":"479","messageId":"480","endLine":357,"endColumn":35},{"ruleId":"477","severity":1,"message":"538","line":358,"column":10,"nodeType":"479","messageId":"480","endLine":358,"endColumn":23},{"ruleId":"477","severity":1,"message":"539","line":358,"column":25,"nodeType":"479","messageId":"480","endLine":358,"endColumn":41},{"ruleId":"481","severity":1,"message":"501","line":382,"column":6,"nodeType":"483","endLine":382,"endColumn":8,"suggestions":"562"},{"ruleId":"477","severity":1,"message":"490","line":6,"column":3,"nodeType":"479","messageId":"480","endLine":6,"endColumn":8},{"ruleId":"481","severity":1,"message":"501","line":53,"column":6,"nodeType":"483","endLine":53,"endColumn":8,"suggestions":"563"},{"ruleId":"542","severity":1,"message":"543","line":164,"column":34,"nodeType":"544","messageId":"545","endLine":164,"endColumn":36},{"ruleId":"477","severity":1,"message":"487","line":4,"column":3,"nodeType":"479","messageId":"480","endLine":4,"endColumn":7},{"ruleId":"477","severity":1,"message":"489","line":7,"column":3,"nodeType":"479","messageId":"480","endLine":7,"endColumn":17},{"ruleId":"477","severity":1,"message":"493","line":15,"column":3,"nodeType":"479","messageId":"480","endLine":15,"endColumn":12},{"ruleId":"477","severity":1,"message":"496","line":20,"column":8,"nodeType":"479","messageId":"480","endLine":20,"endColumn":14},{"ruleId":"477","severity":1,"message":"525","line":21,"column":8,"nodeType":"479","messageId":"480","endLine":21,"endColumn":18},{"ruleId":"477","severity":1,"message":"526","line":23,"column":8,"nodeType":"479","messageId":"480","endLine":23,"endColumn":18},{"ruleId":"477","severity":1,"message":"527","line":24,"column":8,"nodeType":"479","messageId":"480","endLine":24,"endColumn":22},{"ruleId":"477","severity":1,"message":"499","line":68,"column":10,"nodeType":"479","messageId":"480","endLine":68,"endColumn":14},{"ruleId":"477","severity":1,"message":"528","line":74,"column":9,"nodeType":"479","messageId":"480","endLine":74,"endColumn":20},{"ruleId":"477","severity":1,"message":"529","line":93,"column":9,"nodeType":"479","messageId":"480","endLine":93,"endColumn":21},{"ruleId":"477","severity":1,"message":"530","line":232,"column":7,"nodeType":"479","messageId":"480","endLine":232,"endColumn":18},{"ruleId":"477","severity":1,"message":"506","line":565,"column":10,"nodeType":"479","messageId":"480","endLine":565,"endColumn":15},{"ruleId":"481","severity":1,"message":"501","line":570,"column":6,"nodeType":"483","endLine":570,"endColumn":8,"suggestions":"564"},"no-native-reassign",["565"],"no-negated-in-lhs",["566"],"no-unused-vars","'isAuth' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setPopup'. Either include it or remove the dependency array.","ArrayExpression",["567"],"'TextField' is defined but never used.","'Button' is defined but never used.","'Chip' is defined but never used.","'IconButton' is defined but never used.","'InputAdornment' is defined but never used.","'Modal' is defined but never used.","'Slider' is defined but never used.","'FormControlLabel' is defined but never used.","'FormGroup' is defined but never used.","'MenuItem' is defined but never used.","'Checkbox' is defined but never used.","'Rating' is defined but never used.","React Hook useEffect has a missing dependency: 'getOrgName'. Either include it or remove the dependency array.",["568"],"'open' is assigned a value but never used.","'handleClose' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.",["569"],"'ChipInput' is defined but never used.","'classes' is assigned a value but never used.",["570"],"'empId' is assigned a value but never used.","'setEmpId' is assigned a value but never used.","'Input' is defined but never used.","'DescriptionIcon' is defined but never used.","'FaceIcon' is defined but never used.","'FileUploadInput' is defined but never used.","'newExp' is assigned a value but never used.","'setNewExp' is assigned a value but never used.","'organizationName' is assigned a value but never used.","'setOrganizationName' is assigned a value but never used.","'setEducation' is assigned a value but never used.","'PhoneInput' is defined but never used.","'userData' is assigned a value but never used.","'setUserData' is assigned a value but never used.","'jobs' is assigned a value but never used.","'setJobs' is assigned a value but never used.","'contact' is assigned a value but never used.","'setContact' is assigned a value but never used.",["571"],"'Pagination' is defined but never used.","'SearchIcon' is defined but never used.","'FilterListIcon' is defined but never used.","'handleInput' is assigned a value but never used.","'handleDelete' is assigned a value but never used.","'FilterPopup' is assigned a value but never used.",["572"],"'Avatar' is defined but never used.","'ArrowUpwardIcon' is defined but never used.","'ArrowDownwardIcon' is defined but never used.","'server' is defined but never used.","'filterOpen' is assigned a value but never used.","'setFilterOpen' is assigned a value but never used.","'searchOptions' is assigned a value but never used.","'setSearchOptions' is assigned a value but never used.",["573"],["574"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'Slide' is defined but never used.","React Hook useEffect has missing dependencies: 'getOrgName' and 'getcandId'. Either include them or remove the dependency array.",["575"],"'sop' is assigned a value but never used.",["576"],["577"],["578"],["579"],["580"],["581"],["582"],["583"],["584"],["585"],["586"],["587"],["588"],["589"],["590"],"no-global-assign","no-unsafe-negation",{"desc":"591","fix":"592"},{"desc":"593","fix":"594"},{"desc":"595","fix":"596"},{"desc":"595","fix":"597"},{"desc":"595","fix":"598"},{"desc":"595","fix":"599"},{"desc":"595","fix":"600"},{"desc":"595","fix":"601"},{"desc":"602","fix":"603"},{"desc":"595","fix":"604"},{"desc":"595","fix":"605"},{"desc":"595","fix":"606"},{"desc":"602","fix":"607"},{"desc":"595","fix":"608"},{"desc":"591","fix":"609"},{"desc":"595","fix":"610"},{"desc":"593","fix":"611"},{"desc":"595","fix":"612"},{"desc":"595","fix":"613"},{"desc":"595","fix":"614"},{"desc":"595","fix":"615"},{"desc":"595","fix":"616"},{"desc":"595","fix":"617"},{"desc":"595","fix":"618"},"Update the dependencies array to be: [setPopup]",{"range":"619","text":"620"},"Update the dependencies array to be: [getOrgName]",{"range":"621","text":"622"},"Update the dependencies array to be: [getData]",{"range":"623","text":"624"},{"range":"625","text":"624"},{"range":"626","text":"624"},{"range":"627","text":"624"},{"range":"628","text":"624"},{"range":"629","text":"624"},"Update the dependencies array to be: [getOrgName, getcandId]",{"range":"630","text":"631"},{"range":"632","text":"624"},{"range":"633","text":"624"},{"range":"634","text":"624"},{"range":"635","text":"631"},{"range":"636","text":"624"},{"range":"637","text":"620"},{"range":"638","text":"624"},{"range":"639","text":"622"},{"range":"640","text":"624"},{"range":"641","text":"624"},{"range":"642","text":"624"},{"range":"643","text":"624"},{"range":"644","text":"624"},{"range":"645","text":"624"},{"range":"646","text":"624"},[495,497],"[setPopup]",[1116,1118],"[getOrgName]",[3987,3989],"[getData]",[728,730],[2871,2873],[17233,17235],[9144,9146],[1039,1041],[1410,1412],"[getOrgName, getcandId]",[17908,17910],[3849,3851],[3740,3742],[1410,1412],[17908,17910],[495,497],[2871,2873],[1116,1118],[3987,3989],[728,730],[3740,3742],[3849,3851],[9144,9146],[1039,1041],[17233,17235]]